--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: frag_pgdb; Type: DATABASE; Schema: -; Owner: root
--

CREATE DATABASE frag_pgdb WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'ru_RU.UTF-8' LC_CTYPE = 'ru_RU.UTF-8';


ALTER DATABASE frag_pgdb OWNER TO root;

\connect frag_pgdb

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: cnt_free_sl(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION cnt_free_sl(integer, integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
  --  на входе - номер канала или номер ячейки 
  --  подсчет количества свободных СЛ типа type
  --  запись количества свободных СЛ в графу NF_SL OUT_CHAN 
  declare
      tn  record;
      cn  integer;   
  begin
     select into tn TYPE, NUM from OUT_CHAN where KO=$1 and KREIT=$2 and CELL=$3 and CHAN=$4;
    if not found then
       return;
    end if;
    if tn.type='РК' then
       perform cnt_free_slrk( tn.num );
       return;
    end if;          
    select into cn COUNT(NUM) from OUT_CHAN where SOST=0 and NUM>0 and TYPE=tn.type ;
    if not found then
             return;
    end if;
    update  OUT_CHAN set NF_SL= cn, hlp_sign = ','  where TYPE= tn.type;
    -- insert into results values( 'cnt_free_sl' || tt || cn );
    return;
  end;
  $_$;


ALTER FUNCTION public.cnt_free_sl(integer, integer, integer, integer) OWNER TO root;

--
-- Name: cnt_free_slrk(integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION cnt_free_slrk(integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
  --  на входе - номер комплекта РК 
  --  подсчет количества свободных РК типа kind в группе rm_vrc
  --  запись количества свободных РК в графу NF_SL OUT_CHAN 
  declare
      rkrec  record;
      cn  integer;   
  begin
      select into  rkrec kind,rm_vrc from rk where num=$1;
      if not found  then
         return;
      end if;
      select into cn count(num) from vwrk where kind=rkrec.kind and rm_vrc=rkrec.rm_vrc;         
      if not found then
             return;
    end if;
    update  OUT_CHAN set NF_SL= cn, hlp_sign = ','  where type='РК' and num in ( select num from vwrk where kind=rkrec.kind and rm_vrc=rkrec.rm_vrc);         
    return;
  end;
  $_$;


ALTER FUNCTION public.cnt_free_slrk(integer) OWNER TO root;

--
-- Name: color_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION color_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$   declare
      item_record record;
   begin
      notify color;
       return NULL;
   end;$$;


ALTER FUNCTION public.color_trigger() OWNER TO root;

--
-- Name: conf_prz_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION conf_prz_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
    item_record record;
    cl_ch smallint;
begin
      if (TG_OP = 'INSERT')  then
         if (new.chan_vm != 0) then
            cl_ch = new.chan_vm - 8704;
            select num into item_record from out_chan where ko = 2 and cell = (cl_ch)/16 and chan = (cl_ch)%16;

            if (item_record.num != 0) then
               update rk set sel_mar = 1 where num = item_record.num;
            end if;
         end if;
      end if;
      if (TG_OP = 'UPDATE')  then
         if (new.chan_vm != old.chan_vm) then
            cl_ch = old.chan_vm - 8704;
         
            select num into item_record from out_chan where ko = 2 and cell = (cl_ch)/16 and chan = (cl_ch)%16;

            if (item_record.num != 0) then
               update rk set sel_mar = 0 where num = item_record.num;
            end if;

            if (new.chan_vm != 0) then
               cl_ch = new.chan_vm - 8704;
               select num into item_record from out_chan where ko = 2 and cell = (cl_ch)/16 and chan = (cl_ch)%16;

               if (item_record.num != 0) then
                  update rk set sel_mar = 1 where num = item_record.num;
               end if;
            end if;
         end if;
      end if;
      if (TG_OP = 'DELETE')  then
         if (old.chan_vm != 0) then
            cl_ch = old.chan_vm - 8704;

            select num into item_record from out_chan where ko = 2 and cell = (cl_ch)/16 and chan = (cl_ch)%16;

            if (item_record.num != 0) then
               update rk set sel_mar = 0 where num = item_record.num;
            end if;

         end if;
      end if;
      notify conf_prz;
     return NULL;
end;
$$;


ALTER FUNCTION public.conf_prz_trigger() OWNER TO root;

--
-- Name: conn_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION conn_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'conn';
      if  TG_OP = 'DELETE'
      then
                  update check_change set change_num = item_record.change_num +2  where table_name = 'conn';
      else
                  update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'conn';
      end if;
      notify conn;
       return NULL;
   end;$$;


ALTER FUNCTION public.conn_trigger() OWNER TO root;

--
-- Name: def_ch_rmo(integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION def_ch_rmo(integer) RETURNS smallint
    LANGUAGE plpgsql
    AS $_$
  --  на входе - номер комплекта РМО 
  --  на выходе - номер канала РМО с этим номером комлекта
  declare
      ch_rmo smallint default 0 ;
      
  begin
    if $1>=1 and $1<=4  then
        select into ch_rmo  (ko*4096+kreit*512+cell*16+chan)::smallint from out_chan
        where num=$1 and type='РМО';
        if not found then
            return 0; 
        end if;
    end if; 
    
    return ch_rmo;
  end;
  $_$;


ALTER FUNCTION public.def_ch_rmo(integer) OWNER TO root;

--
-- Name: def_in_out_cell(integer, smallint, smallint); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION def_in_out_cell(integer, smallint, smallint) RETURNS smallint
    LANGUAGE plpgsql
    AS $_$
  --  на входе - номер КО, номер крейта, номер ячейки 
  --  на выходе - 9-ячейка подключена, 11-ячейка отключена, 0-состояние не определено.
  declare
      ss sost_cells.kod%TYPE;
      
  begin
      
     select into ss kod  from sost_cells 
     where ko=$1 and kreit=$2 and cell=$3;
     if not found then
         return 0; 
     end if;
    
    return ss;
  end;
  $_$;


ALTER FUNCTION public.def_in_out_cell(integer, smallint, smallint) OWNER TO root;

--
-- Name: def_name_rmo(integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION def_name_rmo(integer) RETURNS character
    LANGUAGE plpgsql
    AS $_$
  --  на входе -  номер РМО
  --  на выходе - имя оператора РМО
  declare
      name_rmo soed.name_rmo%TYPE;
      
  begin
      
     select into name_rmo  name  from out_chan where type='РМО' and num=$1; 
     if not found then
         return ''; 
     end if;
    
    return name_rmo;
  end;
  $_$;


ALTER FUNCTION public.def_name_rmo(integer) OWNER TO root;

--
-- Name: def_sost_svaz(integer, integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION def_sost_svaz(integer, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
  --  на входе - коды ПУУ 
  --  на выходе - состояние связи с соответствующим крейтом КО
  declare
      ss svaz.net%TYPE;
      
  begin
      
     select into ss  o1.net | o2.net  from svaz o1, svaz o2 
     where o1.num=$1 and o2.num=$2 ;
     if not found then
         return 10; 
     end if;
    
    return ss;
  end;
  $_$;


ALTER FUNCTION public.def_sost_svaz(integer, integer) OWNER TO root;

--
-- Name: doc_nsd_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION doc_nsd_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
      if new.in_signal <> old.in_signal
      then
         select change_num into item_record from check_change where table_name = 'doc_nsd';
         update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'doc_nsd';
      end if;
	    return NULL;
	end;$$;


ALTER FUNCTION public.doc_nsd_trigger() OWNER TO root;

--
-- Name: flag_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION flag_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin

      select change_num into item_record from check_change where table_name = 'flag';
      if  TG_OP = 'DELETE'
      then
         update check_change set change_num = item_record.change_num +2  where table_name = 'flag';
      else
         update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'flag';
      end if;

      notify flag;
       return NULL;
   end;$$;


ALTER FUNCTION public.flag_trigger() OWNER TO root;

--
-- Name: form_name_rk(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION form_name_rk() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
  declare
     str  rk.napr%TYPE;
     fr     smallint;
  begin
  select into str , fr NAPR  , FNUM_RC from RK where NUM=old.num ;
  update OUT_CHAN  set  hlp_sign = ',', NAME= str || ' ' || fr  where (TYPE='РК' or TYPE='КК') and NUM=old.num;
  return new;
  end;
  $$;


ALTER FUNCTION public.form_name_rk() OWNER TO root;

--
-- Name: ins_del_conf_prz(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION ins_del_conf_prz() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
  declare
       cnt  integer;
       tmp  char;
       r_vrc rk.rm_vrc%TYPE;
  begin
   if old.rm_vrc=new.rm_vrc and old.kind=new.kind then
      return  new;
   end if;      
   if old.rm_vrc>0  then
      select into cnt count(NUM) from RK where RM_VRC=old.rm_vrc and kind=old.kind;
      if cnt=0 then
         if( old.kind='К9' ) then
            delete from CONF_PRZ where RM_VRC=old.rm_vrc and kind=9;
         end if;
	 if( old.kind='К4' ) then
            delete from CONF_PRZ where RM_VRC=old.rm_vrc and kind=4;
         end if;
      end if;     
   end if;
   if new.rm_vrc>0   then
      tmp := substring(new.kind from 2 for 1);
      select into r_vrc rm_vrc from CONF_PRZ where rm_vrc=new.rm_vrc and kind=tmp;
      if not found then
        if tmp = '9' then
             insert into CONF_PRZ(RM_VRC,NAZV, mar, apzk, kind, chan_vm) values( new.rm_vrc,'   ', 0,0,9,0);
        end if;
        if tmp = '4' then
             insert into CONF_PRZ(RM_VRC,NAZV, mar, apzk, kind, chan_vm) values( new.rm_vrc,'   ', 0,0,4,0);
        end if;
      end if;
   end if;
  return new;
  end;
  $$;


ALTER FUNCTION public.ins_del_conf_prz() OWNER TO root;

--
-- Name: ins_rep_auto(timestamp without time zone, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION ins_rep_auto(timestamp without time zone, integer, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
     		dt_beg_par   ALIAS FOR $1;
		km_in_par    ALIAS FOR $2;
		chan_in_par  ALIAS FOR $3;
		km_out_par   ALIAS FOR $4;
		chan_out_par ALIAS FOR $5;

		s timestamp;
		sin_km		integer;
		sin_chan	integer;
		sin_name	char(16);
		sin_prio	integer;
BEGIN

    SELECT INTO s MAX( dt_order ) FROM report 
	WHERE (km_in = km_in_par AND  chan_in = chan_in_par ) 
		AND (km_out IS NULL AND chan_out IS NULL);

    IF NOT FOUND THEN
       SELECT ins_result('FUNCTION ins_rep_auto error with RECORD s');
	RETURN false;
    END IF;


SELECT INTO sin_km  km FROM out_chan 
           WHERE  km= km_out_par AND chan= chan_out_par;
SELECT INTO sin_chan chan FROM out_chan 
           WHERE  km= km_out_par AND chan= chan_out_par;
SELECT INTO sin_name name FROM out_chan 
           WHERE  km= km_out_par AND chan= chan_out_par;
SELECT INTO sin_prio prio FROM out_chan 
           WHERE  km= km_out_par AND chan= chan_out_par;


  UPDATE report SET dt_beg = dt_beg_par , km_out = sin_km ,
                    chan_out = sin_chan , name_out = sin_name ,
                    prio_out = sin_prio  , passwd =10 ,
                    nmb_oper =  0 
            WHERE dt_order   = s AND km_in = km_in_par AND chan_in=chan_in_par;


RETURN true;
END;
$_$;


ALTER FUNCTION public.ins_rep_auto(timestamp without time zone, integer, integer, integer, integer) OWNER TO postgres;

--
-- Name: ins_result(character); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION ins_result(character) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
DECLARE
    msg ALIAS FOR $1;
BEGIN

     INSERT INTO results VALUES(msg);
   RETURN true;
END;
$_$;


ALTER FUNCTION public.ins_result(character) OWNER TO postgres;

--
-- Name: ins_results(text); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION ins_results(text) RETURNS void
    LANGUAGE plpgsql
    AS $_$
  begin
    insert into results values( $1 );
    return;
  end;
 $_$;


ALTER FUNCTION public.ins_results(text) OWNER TO root;

--
-- Name: integrity_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION integrity_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$   declare
      item_record record;
   begin
      notify integrity;
       return NULL;
   end;$$;


ALTER FUNCTION public.integrity_trigger() OWNER TO root;

--
-- Name: kulon_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION kulon_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      notify kulon;
      return NULL;
   end;$$;


ALTER FUNCTION public.kulon_trigger() OWNER TO root;

--
-- Name: kzn_dkl_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION kzn_dkl_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$   declare
      item_record record;
   begin
      notify kzn_dkl;
       return NULL;
   end;$$;


ALTER FUNCTION public.kzn_dkl_trigger() OWNER TO root;

--
-- Name: loglist_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION loglist_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'loglist';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'loglist';
	    return NULL;
	end;$$;


ALTER FUNCTION public.loglist_trigger() OWNER TO root;

--
-- Name: mar4_to_int(character); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION mar4_to_int(character) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
  --  на входе - rk.mar 
  --  переводит строку маркера в число
  begin
    if $1='М1' then
       return 6;
    elsif $1 = 'М2'  then
       return 4;
    elsif $1='СМ1' then
       return 5;
    elsif $1 = 'СМ2'  then
       return 1;
    else
       return 0;        
    end if;
  end;
  $_$;


ALTER FUNCTION public.mar4_to_int(character) OWNER TO root;

--
-- Name: mar_to_int(character, integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION mar_to_int(character, integer) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
  --  на входе - rk.mar , rk.kl 
  --  переводит строку маркера+ключ в число для К9
  begin
    if $1='М1' and $2=1 then
       return 91;
    elsif $1='М1' and $2=2 then
       return 92;       
    elsif $1 = 'М2' and $2=1  then
       return 93;
    elsif $1 = 'М2' and $2=2  then
       return 94;        
    elsif  $1 = 'М3' and $2=1  then
       return 3;   
    elsif  $1 = 'М3' and $2=2  then
       return 4;          
    elsif $1='СМ1' and $2=1 then
       return 95;
    elsif $1='СМ1' and $2=2 then
       return 96;       
    elsif $1 = 'СМ2' and $2=1 then
       return 97;
    elsif $1 = 'СМ2' and $2=2 then
       return 98;       
    elsif  $1 = 'СМ3' and $2=1 then
       return 5;                   
    elsif  $1 = 'СМ3' and $2=2 then
       return 6;                        
    else
       return 0;        
    end if;
  end;
  $_$;


ALTER FUNCTION public.mar_to_int(character, integer) OWNER TO root;

--
-- Name: nastr_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION nastr_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'nastr';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'nastr';
      notify nastr;
      return NULL;
   end;$$;


ALTER FUNCTION public.nastr_trigger() OWNER TO root;

--
-- Name: nsd_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION nsd_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
      item_record record;
   begin
         notify nsd;
         return NULL;
   end;

$$;


ALTER FUNCTION public.nsd_trigger() OWNER TO root;

--
-- Name: num_as_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION num_as_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'num_as';
      if  TG_OP = 'DELETE'
      then
               update check_change set change_num = item_record.change_num +2 where table_name = 'num_as';
      else
               update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'num_as';
      end if;
      notify num_as;
      return NULL;
   end;$$;


ALTER FUNCTION public.num_as_trigger() OWNER TO root;

--
-- Name: out_chan_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION out_chan_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'out_chan';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'out_chan';
      notify z_out_chan;
      return NULL;
   end;
$$;


ALTER FUNCTION public.out_chan_trigger() OWNER TO root;

--
-- Name: pk_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION pk_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      if (new.am != old.am)
      then
         update out_chan set line = new.am where type = 'ПК' and num = new.num; 
      end if;
      notify pk;
      return NULL;
   end;

$$;


ALTER FUNCTION public.pk_trigger() OWNER TO root;

--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    LANGUAGE c
    AS 'plpgsql.so', 'plpgsql_call_handler';


ALTER FUNCTION public.plpgsql_call_handler() OWNER TO postgres;

--
-- Name: pr_char_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION pr_char_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'pr_char';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'pr_char';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.pr_char_trigger() OWNER TO root;

--
-- Name: proba_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION proba_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$	declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'proba';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'proba';
	    return NULL;
	end;$$;


ALTER FUNCTION public.proba_trigger() OWNER TO root;

--
-- Name: results_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION results_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'results';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'results';
	    return NULL;
	end;$$;


ALTER FUNCTION public.results_trigger() OWNER TO root;

--
-- Name: rk_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION rk_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      notify z_rk;
      return NULL;
   end;
$$;


ALTER FUNCTION public.rk_trigger() OWNER TO root;

--
-- Name: rmdi_svaz_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION rmdi_svaz_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$	declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'rmdi_svaz';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'rmdi_svaz';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.rmdi_svaz_trigger() OWNER TO root;

--
-- Name: rmo_config_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION rmo_config_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      notify rmo_config;
      return NULL;
   end;
$$;


ALTER FUNCTION public.rmo_config_trigger() OWNER TO root;

--
-- Name: rmo_stat_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION rmo_stat_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'rmo_stat';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'rmo_stat';
	    return NULL;
	end;$$;


ALTER FUNCTION public.rmo_stat_trigger() OWNER TO root;

--
-- Name: sa_rpu_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION sa_rpu_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'sa_rpu';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'sa_rpu';
      notify sa_rpu;
      return NULL;
   end;$$;


ALTER FUNCTION public.sa_rpu_trigger() OWNER TO root;

--
-- Name: sig_rmo_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION sig_rmo_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'sig_rmo';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'sig_rmo';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.sig_rmo_trigger() OWNER TO root;

--
-- Name: smena_trig(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION smena_trig() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      notify current_smena;
      return NULL;
   end;$$;


ALTER FUNCTION public.smena_trig() OWNER TO root;

--
-- Name: soed_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION soed_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'soed';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'soed';
	    return NULL;
	end;$$;


ALTER FUNCTION public.soed_trigger() OWNER TO root;

--
-- Name: sost_cells_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION sost_cells_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'sost_cells';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'sost_cells';
      notify sost_cells;
      return NULL;
   end;
$$;


ALTER FUNCTION public.sost_cells_trigger() OWNER TO root;

--
-- Name: sost_sa_rpu_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION sost_sa_rpu_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'sost_sa_rpu';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'sost_sa_rpu';
      notify sost_sa_rpu;
      return NULL;
   end;
$$;


ALTER FUNCTION public.sost_sa_rpu_trigger() OWNER TO root;

--
-- Name: svaz_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION svaz_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'svaz';
      if  TG_OP = 'DELETE' then
                  update check_change set change_num = item_record.change_num +2  where table_name = 'svaz';
      else
                  update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'svaz';
      end if;
      notify svaz;
       return NULL;
   end;
$$;


ALTER FUNCTION public.svaz_trigger() OWNER TO root;

--
-- Name: tab_app_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tab_app_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tab_app';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tab_app';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tab_app_trigger() OWNER TO root;

--
-- Name: tab_kzn_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tab_kzn_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'tab_kzn';
      if  TG_OP = 'DELETE' then
                  update check_change set change_num = item_record.change_num +2  where table_name = 'tab_kzn';
      else
         update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tab_kzn';
      end if;
      notify tab_kzn;
       return NULL;
   end;$$;


ALTER FUNCTION public.tab_kzn_trigger() OWNER TO root;

--
-- Name: tab_regl_k4_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tab_regl_k4_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tab_regl_k4';
		update check_chahge set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tab_regl_k4';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tab_regl_k4_trigger() OWNER TO root;

--
-- Name: tab_regl_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tab_regl_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tab_regl';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tab_regl';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tab_regl_trigger() OWNER TO root;

--
-- Name: tab_soob_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tab_soob_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tab_soob';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tab_soob';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tab_soob_trigger() OWNER TO root;

--
-- Name: tek_regl_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tek_regl_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tek_regl';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tek_regl';
	    return NULL;
	end;$$;


ALTER FUNCTION public.tek_regl_trigger() OWNER TO root;

--
-- Name: tek_sign_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tek_sign_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tek_sign';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tek_sign';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tek_sign_trigger() OWNER TO root;

--
-- Name: tek_soob_rk_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tek_soob_rk_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      notify tek_soob_rk;
      return NULL;
   end;$$;


ALTER FUNCTION public.tek_soob_rk_trigger() OWNER TO root;

--
-- Name: tel_ab_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tel_ab_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tel_ab';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tel_ab';
	    return NULL;
	end;$$;


ALTER FUNCTION public.tel_ab_trigger() OWNER TO root;

--
-- Name: tel_list_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tel_list_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tel_list';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tel_list';
	    return NULL;
	end;$$;


ALTER FUNCTION public.tel_list_trigger() OWNER TO root;

--
-- Name: tel_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tel_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      if (TG_OP != 'DELETE') then     
         update out_chan set name = cast( new.tel1 as char(16) ), hlp_sign = ',' where type = 'РМО' and num = 1;
         update out_chan set name = cast( new.tel2 as char(16) ), hlp_sign = ',' where type = 'РМО' and num = 2;
         update out_chan set name = cast( new.tel3 as char(16) ), hlp_sign = ',' where type = 'РМО' and num = 3;
         update out_chan set name = cast( new.tel4 as char(16) ), hlp_sign = ',' where type = 'РМО' and num = 4;
         insert into sig_rmo values( current_timestamp, 40, 40 );
--      else
--         update out_chan set name = ' ', hlp_sign = ',' where type = 'РМО' and num = 1;
--         update out_chan set name = ' ', hlp_sign = ',' where type = 'РМО' and num = 2;
--         update out_chan set name = ' ', hlp_sign = ',' where type = 'РМО' and num = 3;
--         update out_chan set name = ' ', hlp_sign = ',' where type = 'РМО' and num = 4;
--         insert into sig_rmo values( current_timestamp, 40, 40 );
      end if;
      return NULL;
   end;
$$;


ALTER FUNCTION public.tel_trigger() OWNER TO root;

--
-- Name: tprz_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tprz_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tprz';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tprz';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.tprz_trigger() OWNER TO root;

--
-- Name: tregl_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION tregl_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'tregl';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'tregl';
	    return NULL;
	end;$$;


ALTER FUNCTION public.tregl_trigger() OWNER TO root;

--
-- Name: upd_kzn_dkl(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION upd_kzn_dkl() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
  begin
   if old.dkl=new.dkl then
      return  new;
   end if;      
   update sa_rpu set dkl=new.dkl where kzn=old.kzn;      
   return new;
  end;
  $$;


ALTER FUNCTION public.upd_kzn_dkl() OWNER TO root;

--
-- Name: upd_rep_end_new(timestamp without time zone, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_rep_end_new(timestamp without time zone, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
  dt_end_par ALIAS FOR $1;
  km_par     ALIAS FOR $2;
  chan_par   ALIAS FOR $3;

   s timestamp;
   so integer;
   sc integer;
   s2 timestamp;

BEGIN

SELECT INTO s MAX( dt_order) FROM report
		WHERE (km_in=km_par AND chan_in=chan_par)
			OR (km_out=km_par AND chan_out=chan_par); 
  IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_rep_end_new error with RECORD s');
	RETURN false;
  END IF;
  
  UPDATE report SET dt_end = dt_end_par 
 
	  	WHERE dt_order=s 
			AND ((km_in = km_par AND chan_in  = chan_par) 
			OR (km_out  = km_par AND chan_out = chan_par));            


   SELECT INTO so MAX( km ) FROM out_chan WHERE type=5 AND rmo IN
   ( SELECT RMO FROM out_chan WHERE km=km_par AND chan= chan_par );
   
  IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_rep_end_new error with RECORD so');
	RETURN false;
  END IF;


    SELECT INTO sc MAX( chan ) FROM out_chan WHERE type=5 AND rmo IN
     ( SELECT RMO FROM out_chan WHERE km=km_par AND chan= chan_par );
   
   
  IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_rep_end_new error with RECORD sc ');
	RETURN false;
  END IF;


   SELECT INTO s2 MAX( dt_order ) FROM report
		WHERE (km_in = km_par AND chan_in = chan_par)

			AND (km_out=so AND chan_out=sc ) and dt_end IS NULL; 
     
  IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_rep_end_new error with RECORD s2 ');
	RETURN false;
  END IF;
    
  
  UPDATE report SET dt_end = dt_end_par 
		WHERE dt_order= s2
		AND ((km_in=km_par AND chan_in=chan_par)
		AND (km_out=1 and CHAN_OUT=60));            

RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_rep_end_new(timestamp without time zone, integer, integer) OWNER TO postgres;

--
-- Name: upd_rep_oper_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_rep_oper_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
	dt_beg_par	ALIAS FOR $1;
	name_out_par	ALIAS FOR $2;
	km_in_par	ALIAS FOR $3;
	chan_in_par	ALIAS FOR $4;
	km_out_par	ALIAS FOR $5;
	chan_out_par	ALIAS FOR $6;
	prio_par	ALIAS FOR $7;
	passwd_par	ALIAS FOR $8;
	nmb_oper_par	ALIAS FOR $9;


	s	timestamp;
	rs_rmo  integer;
	ks_rmo	integer;
	ks_km	integer;
	ks_chan	integer;

BEGIN

  SELECT INTO rs_rmo  rmo FROM out_chan WHERE km = km_out_par AND chan = chan_out_par ORDER BY(rmo);  
 

	SELECT INTO ks_rmo 	rmo	FROM out_chan WHERE type=5 AND rmo= rs_rmo ;
	SELECT INTO ks_km 	km	FROM out_chan WHERE type=5 AND rmo= rs_rmo ;
	SELECT INTO ks_chan 	chan	FROM out_chan WHERE type=5 AND rmo= rs_rmo ;

   IF NOT FOUND THEN
	SELECT ins_result('FUNCTION upd_rep_oper_soed error with RECORD ks');
	RETURN false;
   END IF;


   IF ks_rmo = NULL THEN
	SELECT ins_result('FUNCTION upd_rep_oper_soed error: RMO is NULL');
        RETURN false;
   END IF;

     SELECT INTO s MAX( dt_order ) FROM report 
		WHERE (km_in=km_in_par AND chan_in=chan_in_par)
		AND ((km_out IS NULL) AND (chan_out IS NULL));

   IF NOT FOUND THEN

	INSERT INTO report (dt_order,km_in,chan_in,name_in,prio_in) 
	SELECT dt_beg_par,km,chan,name,prio FROM out_chan
       where km=km_in_par and chan=chan_in_par;
	
   END IF;

     IF s = NULL THEN

    SELECT INTO s MAX( dt_order ) FROM report 
	WHERE (km_in=km_in_par AND chan_in=chan_in_par) AND ((km_out IS NULL) AND (chan_out IS NULL));

	IF NOT FOUND THEN
		SELECT ins_result('FUNCTION upd_rep_oper_soed error with RECORD s');
		RETURN false;
	END IF;
   END IF;


	UPDATE report SET dt_beg=dt_beg_par, km_out=ks_km ,
	chan_out=ks_chan,name_out='Оператор РМО',
	prio_out=0,passwd=0,nmb_oper= nmb_oper 
         WHERE  dt_order = s  AND (KM_IN=km_in_par AND chan_in= chan_in_par );


     SELECT INTO s  MAX( dt_order ) FROM report 
	WHERE ( km_in=km_in_par  AND chan_in = chan_in_par ) 
	AND ( km_out= ks_km  AND chan_out= ks_chan )
     and DT_END IS NULL;


   IF NOT FOUND THEN
	SELECT ins_result('FUNCTION upd_rep_oper_soed error with RECORD s');
	RETURN false;
   END IF;


  IF s = NULL THEN
      RETURN false;
  END IF;

UPDATE report SET dt_end= dt_beg_par 
	WHERE 	(dt_order=s 
		AND km_in=km_in_par 
		AND chan_in= chan_in_par 
		AND km_out=ks_km
		AND chan_out=ks_chan);


RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_rep_oper_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) OWNER TO postgres;

--
-- Name: upd_rep_soed_new(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_rep_soed_new(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
	
	dt_beg_par	ALIAS FOR $1;
	name_out_par	ALIAS FOR $2;
	km_in_par	ALIAS FOR $3;
	chan_in_par	ALIAS FOR $4;
	km_out_par	ALIAS FOR $5;
	chan_out_par	ALIAS FOR $6;
	prio_out_par	ALIAS FOR $7;
	passwd_par	ALIAS FOR $8;
	nmb_oper_par	ALIAS FOR $9;

	s timestamp;
BEGIN

   SELECT INTO s MAX( dt_order ) FROM report 
	WHERE (km_in = km_in_par AND chan_in=chan_in_par)
	  AND (km_out IS NULL AND chan_out IS NULL);

   IF NOT FOUND THEN
        INSERT INTO report (dt_order,km_in,chan_in,name_in,prio_in)
        SELECT dt_beg_par,km,chan,name,prio FROM out_chan
        where km=km_in_par AND chan=chan_in_par;
   END IF;

  

  UPDATE report SET dt_beg=dt_beg_par ,km_out=km_out_par,
		chan_out=chan_out_par,name_out=name_out_par,
		prio_out=prio_out_par,passwd=passwd_par,
		nmb_oper=nmb_oper_par
		WHERE dt_order=s 
			AND km_in=km_in_par AND chan_in=chan_in_par;
 

RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_rep_soed_new(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) OWNER TO postgres;

--
-- Name: upd_report_end(timestamp without time zone, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_report_end(timestamp without time zone, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
	dt_end_par 	ALIAS FOR $1;
	km_par		ALIAS FOR $2;
	chan_par	ALIAS FOR $3;

	s timestamp;

BEGIN


   SELECT INTO s MAX( dt_order ) FROM report 
	WHERE (km_in  = km_par AND chan_in  = chan_par ) 
	   OR (km_out = km_par AND chan_out = chan_par ); 

   IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_report_end error with RECORD ');
	RETURN false;
   END IF;  


  UPDATE report SET dt_end=dt_end_par 
		WHERE dt_order= s AND 
			   (( km_in  = km_par AND chan_in  = chan_par )
			OR (  km_out = km_par AND chan_out = chan_par ));            
  

RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_report_end(timestamp without time zone, integer, integer) OWNER TO postgres;

--
-- Name: upd_report_endo(timestamp without time zone, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_report_endo(timestamp without time zone, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
  dt_end_par	ALIAS FOR $1;
  km_par	ALIAS FOR $2;
  chan_par	ALIAS FOR $3;



	s	timestamp;
	so_km	integer;
	so_chan	integer;

BEGIN


   SELECT INTO so_km  km FROM out_chan WHERE type=5 AND rmo IN
    (SELECT rmo FROM out_chan WHERE km=km_par AND chan=chan_par);

   SELECT INTO so_chan  chan FROM out_chan WHERE type=5 AND rmo IN
    (SELECT rmo FROM out_chan WHERE km=km_par AND chan=chan_par);

   SELECT INTO s MAX( dt_order ) FROM report 
			WHERE (km_in=km_par AND chan_in=chan_par) 
			AND ( km_out=so_km AND chan_out=so_chan );

 IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_report_endo error with RECORD s'::bpchar);
	RETURN false;
    END IF;

  UPDATE report SET dt_end=dt_end_par 
	WHERE dt_order=s AND ((km_in=km_par AND chan_in=chan_par) 
	AND ( km_out=so_km AND chan_out= so_chan));


RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_report_endo(timestamp without time zone, integer, integer) OWNER TO postgres;

--
-- Name: upd_report_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_report_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
	dt_beg_par	ALIAS FOR $1;
	name_out_par	ALIAS FOR $2;
	km_in_par	ALIAS FOR $3;
	chan_in_par	ALIAS FOR $4;
	km_out_par	ALIAS FOR $5;
	chan_out_par	ALIAS FOR $6;
	prio_out_par	ALIAS FOR $7;
	passwd_par	ALIAS FOR $8;
	nmb_oper_par	ALIAS FOR $9;


	s timestamp;
BEGIN


    SELECT INTO s MAX( dt_order ) FROM report WHERE km_in=km_in_par AND chan_in=chan_in_par;

    IF NOT FOUND THEN
       SELECT ins_result('FUNCTION upd_report_soed error with RECORD s');
	RETURN false;
    END IF;

  UPDATE report SET 	dt_beg=dt_beg_par,
			km_out=km_out_par,
			chan_out=chan_out_par,
			name_out=name_out_par,
			prio_out=prio_out_par,
			passwd=passwd_par,
			nmb_oper=nmb_oper_par

		WHERE dt_order=s AND km_in=km_in_par AND chan_in=chan_in_par;


RETURN true;
END;
$_$;


ALTER FUNCTION public.upd_report_soed(timestamp without time zone, character, integer, integer, integer, integer, integer, integer, integer) OWNER TO postgres;

--
-- Name: upd_sa_rpu_blk_i(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION upd_sa_rpu_blk_i() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
  declare
       ss smallint ;
       scell smallint; /* состояние ячейки 9-подключена, 11-отключена, 0 - не определено */
       blk  smallint;
       
  begin
   if old.kreit1=new.kreit1 and old.kreit2=new.kreit2 and old.kreit3=new.kreit3 and
     old.cell1=new.cell1 and old.cell2=new.cell2 and old.cell3=new.cell3   then
     return  new;
   end if;
    blk := old.blk_i;
   if old.kreit1<>new.kreit1  then
      ss := def_sost_svaz( 20, 21 );
      if  ss = 1 then   /* есть связь с соответствующим крейтом АКО */
         blk:= blk & ~1;  /* разблокируем */
         blk:= blk & ~1;  /* разблокируем */
      elsif ss = 0 or new.kreit1=0 then  
         blk := blk | 1 ;     /*  блокируем */
         blk := blk | 1 ;     /*  блокируем */
      end if;
  end if;
  if old.kreit1<>new.kreit1  or old.cell1<>new.cell1 then
     scell := def_in_out_cell( 1, new.kreit1, new.cell1 );
     if  scell = 9 then   /* ячейка подключена */
         blk:= blk & ~8;  /* разблокируем */
         blk:= blk & ~8;  /* разблокируем */
     else            
         blk := blk | 8 ;     /*  блокируем */
         blk := blk | 8 ;     /*  блокируем */
     end if;
     /* perform  ins_results( current_timestamp ||   scell || old.blk_i  || blk);*/
  end if;
  if old.kreit2<>new.kreit2  then
      ss := def_sost_svaz( 22, 23);
      if  ss = 1 then   /* есть связь с соответствующим крейтом ЦКО */
         blk := blk & ~2;  /* разблокируем */
         blk := blk & ~2;  /* разблокируем */
      elsif ss=0  or new.kreit2=0 then 
         blk := blk | 2;     /*  блокируем */
         blk := blk | 2;     /*  блокируем */
      end if;
  end if;
  if old.kreit2<>new.kreit2  or old.cell2<>new.cell2 then
     scell := def_in_out_cell( 2, new.kreit2, new.cell2 );
     if  scell = 9 then   /* ячейка подключена */
         blk:= blk & ~16;  /* разблокируем */
         blk:= blk & ~16;  /* разблокируем */
     else           
         blk := blk | 16 ;     /*  блокируем */
         blk := blk | 16 ;     /*  блокируем */
     end if;
    /* perform  ins_results( current_timestamp ||   scell || old.blk_i  || blk); */
  end if;
  new.blk_i := blk ;
  return new;
  end;
  $$;


ALTER FUNCTION public.upd_sa_rpu_blk_i() OWNER TO root;

--
-- Name: ups_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION ups_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'ups';
      update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'ups';
      notify ups;
      return NULL;
   end;
$$;


ALTER FUNCTION public.ups_trigger() OWNER TO root;

--
-- Name: uso_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION uso_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   declare
      item_record record;
   begin
      notify uso;
      return NULL;
   end;
$$;


ALTER FUNCTION public.uso_trigger() OWNER TO root;

--
-- Name: view_conn_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION view_conn_trigger() RETURNS opaque
    LANGUAGE plpgsql
    AS $$
	declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'view_conn';
		update check_change set change_num = item_record.change_num +1 where table_name = 'view_conn';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.view_conn_trigger() OWNER TO root;

--
-- Name: vkk_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION vkk_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
		item_record record;
	begin
		select change_num into item_record from check_change where table_name = 'vkk';
		update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'vkk';
	    return NULL;
	end;
$$;


ALTER FUNCTION public.vkk_trigger() OWNER TO root;

--
-- Name: wr_ssvaz_nport(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION wr_ssvaz_nport(integer, integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
  --  на входе - svaz.num для NPortServer СА или АРПУ(10,11,12,13),
  --           - состояние связи с NPortServer(1-есть,0-нет), 
  --             его нужно записать в svaz.net 
  --           - состояние блокировки СА(0-нет,1-есть),
  --             его нужно записать в sa_rpu.blk для СА, подключенных к NPortServer
  -- 	       - номер активного интерфейса 1 - сеть 1, 2-сеть 2
  begin
  if $4=1 then
     update SVAZ set NET=$2, p1=$2,sp1='2' where NUM=$1;
  else 
     update SVAZ set NET=$2, p2=$2,sp1='1' where NUM=$1;
  end if;     
     update sa_rpu set blk=$3 where num in ( select num from sost_sa_rpu where nport=$1-9);
    return;
  end;
  $_$;


ALTER FUNCTION public.wr_ssvaz_nport(integer, integer, integer, integer) OWNER TO root;

--
-- Name: write_ssvaz_nport(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION write_ssvaz_nport(integer, integer, integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
  --  на входе - svaz.num для NPortServer СА или АРПУ(10,11,12,13),
  --           - состояние связи с NPortServer(1-есть,0-нет), 
  --             его нужно записать в svaz.net 
  --           - состояние блокировки СА(0-нет,1-есть),
  --             его нужно записать в sa_rpu.blk для СА, подключенных к NPortServer
  begin
     update SVAZ set NET=$2 where NUM=$1;
     update sa_rpu set blk=$3 where num in ( select num from sost_sa_rpu where nport=$1-9);
    return;
  end;
  $_$;


ALTER FUNCTION public.write_ssvaz_nport(integer, integer, integer) OWNER TO root;

--
-- Name: zapret_prz_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION zapret_prz_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'zapret_prz';

      if  TG_OP = 'DELETE'
      then
          update check_change set change_num = item_record.change_num +2  where table_name = 'zapret_prz';
      else
               update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'zapret_prz';
      end if;
      notify zapret_prz;
    return NULL;
   end;$$;


ALTER FUNCTION public.zapret_prz_trigger() OWNER TO root;

--
-- Name: zapret_trigger(); Type: FUNCTION; Schema: public; Owner: root
--

CREATE FUNCTION zapret_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$   declare
      item_record record;
   begin
      select change_num into item_record from check_change where table_name = 'zapret';
      if  TG_OP = 'DELETE'
      then
                  update check_change set change_num = item_record.change_num +2  where table_name = 'zapret';
      else
                  update check_change set change_num = item_record.change_num +1,  table_oid = new.oid  where table_name = 'zapret';
      end if;
      notify zapret;
       return NULL;
   end;$$;


ALTER FUNCTION public.zapret_trigger() OWNER TO root;

SET default_tablespace = '';

SET default_with_oids = true;

--
-- Name: check_change; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE check_change (
    table_id integer NOT NULL,
    table_name character(20) NOT NULL,
    change_num integer DEFAULT 0 NOT NULL,
    table_oid bigint NOT NULL
);


ALTER TABLE public.check_change OWNER TO root;

SET default_with_oids = false;

--
-- Name: color; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE color (
    kod smallint NOT NULL,
    r smallint,
    g smallint,
    b smallint,
    name character(30),
    r_text smallint,
    g_text smallint,
    b_text smallint
);


ALTER TABLE public.color OWNER TO root;

SET default_with_oids = true;

--
-- Name: conf_prz; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE conf_prz (
    rm_vrc smallint,
    nazv character(30),
    mar smallint,
    apzk smallint,
    kind smallint DEFAULT 9,
    chan_vm smallint DEFAULT 0,
    chan_apzk smallint DEFAULT 0
);


ALTER TABLE public.conf_prz OWNER TO root;

--
-- Name: conn; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE conn (
    dt timestamp(2) without time zone,
    ko1 smallint,
    kreit1 smallint,
    cell1 smallint,
    chan1 smallint,
    ko2 smallint,
    kreit2 smallint,
    cell2 smallint,
    chan2 smallint,
    sel smallint,
    zc1 smallint DEFAULT 0,
    zc2 smallint DEFAULT 0,
    azc1 smallint DEFAULT 0,
    azc2 smallint DEFAULT 0,
    CONSTRAINT conn_chan1 CHECK (((chan1 >= 5) AND (chan1 <= 8))),
    CONSTRAINT conn_chan2 CHECK (((chan2 >= 5) AND (chan2 <= 8))),
    CONSTRAINT conn_ko1 CHECK ((((ko1 = 1) OR (ko1 = 2)) OR (ko1 = 3))),
    CONSTRAINT conn_ko2 CHECK ((((ko2 = 1) OR (ko2 = 2)) OR (ko2 = 3))),
    CONSTRAINT conn_kreit1 CHECK (((kreit1 = 1) OR (kreit1 = 2))),
    CONSTRAINT conn_kreit2 CHECK (((kreit2 = 1) OR (kreit2 = 2)))
);


ALTER TABLE public.conn OWNER TO root;

SET default_with_oids = false;

--
-- Name: current_smena; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE current_smena (
    dt timestamp without time zone DEFAULT now(),
    leader character(30) DEFAULT '-'::bpchar,
    eng1 character(30) DEFAULT '-'::bpchar,
    eng2 character(30) DEFAULT '-'::bpchar,
    tel1 character(30) DEFAULT '-'::bpchar,
    tel2 character(30) DEFAULT '-'::bpchar,
    tel3 character(30) DEFAULT '-'::bpchar,
    tel4 character(30) DEFAULT '-'::bpchar,
    eng_rmish character(30) DEFAULT '-'::bpchar,
    hlp_sign character(1) DEFAULT ','::bpchar
);


ALTER TABLE public.current_smena OWNER TO root;

--
-- Name: doc_integrity; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE doc_integrity (
    dt timestamp without time zone NOT NULL,
    equip_id smallint NOT NULL,
    integr_sign smallint DEFAULT 0 NOT NULL,
    event character(255) NOT NULL,
    rmdi_sign smallint NOT NULL,
    eng_name character(30) NOT NULL
);


ALTER TABLE public.doc_integrity OWNER TO root;

SET default_with_oids = true;

--
-- Name: doc_nsd; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE doc_nsd (
    dt timestamp without time zone,
    ko smallint,
    event character(255),
    eng_name character(30)
);


ALTER TABLE public.doc_nsd OWNER TO root;

--
-- Name: flag; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE flag (
    flag smallint,
    marker smallint,
    cycn smallint,
    busy_sp smallint DEFAULT 0 NOT NULL,
    ved_cuu smallint,
    zapret smallint DEFAULT 0
);


ALTER TABLE public.flag OWNER TO root;

SET default_with_oids = false;

--
-- Name: integrity; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE integrity (
    cuu1 smallint DEFAULT 0,
    cuu2 smallint DEFAULT 0,
    rmo1 smallint DEFAULT 0,
    rmo2 smallint DEFAULT 0,
    rmo3 smallint DEFAULT 0,
    rmo4 smallint DEFAULT 0,
    rmdi1 smallint DEFAULT 0,
    rmdi2 smallint DEFAULT 0,
    rmish smallint DEFAULT 0,
    database smallint DEFAULT 0
);


ALTER TABLE public.integrity OWNER TO root;

--
-- Name: k4_help; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE k4_help (
    kod smallint NOT NULL,
    soob character(15),
    kdg character(5),
    bit_4 character(8),
    bit_5 character(5),
    bit_6 character(5),
    bit_7 character(5),
    type smallint,
    order_index smallint NOT NULL
);


ALTER TABLE public.k4_help OWNER TO root;

--
-- Name: k9_help; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE k9_help (
    kod smallint NOT NULL,
    soob character(15),
    num_as character(10),
    type smallint,
    order_index smallint NOT NULL
);


ALTER TABLE public.k9_help OWNER TO root;

SET default_with_oids = true;

--
-- Name: kulon; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE kulon (
    num smallint NOT NULL,
    zsb smallint
);


ALTER TABLE public.kulon OWNER TO root;

SET default_with_oids = false;

--
-- Name: kzn_dkl; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE kzn_dkl (
    kzn smallint,
    dkl smallint
);


ALTER TABLE public.kzn_dkl OWNER TO root;

SET default_with_oids = true;

--
-- Name: loglist; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE loglist (
    date_time timestamp without time zone,
    rmdisign smallint,
    ko smallint,
    kreit smallint,
    cell smallint,
    chan smallint,
    event character(255),
    action smallint DEFAULT 0 NOT NULL,
    eng_name character(30)
);


ALTER TABLE public.loglist OWNER TO root;

--
-- Name: nastr; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE nastr (
    ch_num smallint NOT NULL,
    line smallint,
    nabor smallint,
    prm smallint,
    prd smallint,
    usil smallint,
    pol smallint,
    pod smallint,
    exo smallint,
    level smallint,
    freq smallint,
    tone smallint,
    imp_otb smallint,
    p_otb smallint,
    dop smallint,
    interv smallint,
    vkla smallint,
    vviz smallint
);


ALTER TABLE public.nastr OWNER TO root;

SET default_with_oids = false;

--
-- Name: nsd; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE nsd (
    name text,
    but_id integer,
    state integer DEFAULT 0,
    in_signal integer,
    out_signal integer,
    line_id smallint,
    ko integer,
    index integer,
    ui integer,
    ui_contact integer
);


ALTER TABLE public.nsd OWNER TO root;

SET default_with_oids = true;

--
-- Name: num_as; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE num_as (
    as1 smallint
);


ALTER TABLE public.num_as OWNER TO root;

--
-- Name: out_chan; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE out_chan (
    ko smallint NOT NULL,
    kreit smallint NOT NULL,
    cell smallint NOT NULL,
    chan smallint NOT NULL,
    type character(5),
    num smallint,
    name character(16),
    sost smallint,
    vdt timestamp(2) without time zone,
    vinf character(21),
    line smallint DEFAULT 0,
    grif character(5),
    rmo smallint,
    ot smallint,
    otb smallint,
    snx smallint,
    nomer smallint,
    n_sa_rpu smallint,
    avar smallint,
    nf_sl smallint,
    in_out smallint,
    hlp_sign character(1) DEFAULT ','::bpchar
);


ALTER TABLE public.out_chan OWNER TO root;

--
-- Name: pk; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE pk (
    num smallint NOT NULL,
    am smallint,
    kzn smallint,
    kl smallint,
    lsmena smallint,
    psh smallint,
    gr smallint,
    zapret smallint
);


ALTER TABLE public.pk OWNER TO root;

SET default_with_oids = false;

--
-- Name: proba; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE proba (
    pr smallint
);


ALTER TABLE public.proba OWNER TO root;

SET default_with_oids = true;

--
-- Name: results; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE results (
    msg text
);


ALTER TABLE public.results OWNER TO root;

--
-- Name: rk; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE rk (
    num smallint NOT NULL,
    kind character(3),
    napr character(13),
    mar character(4),
    net character(5),
    crs character(6),
    freq character(300),
    kzn smallint,
    kl smallint,
    lsmena smallint,
    fnum smallint,
    psh smallint DEFAULT 0,
    gr smallint DEFAULT 0,
    zapret smallint,
    vrc smallint,
    fvkk smallint,
    nvrc smallint,
    avrc smallint,
    zpiv smallint,
    mar_rc smallint,
    sost_rc smallint,
    fnum_rc smallint,
    rm_vrc smallint,
    mar_send smallint,
    sost_send smallint,
    fnum_send smallint,
    soi smallint,
    hlp_sign character(1) DEFAULT ','::bpchar,
    sel_mar smallint DEFAULT 0
);


ALTER TABLE public.rk OWNER TO root;

--
-- Name: rmdi_svaz; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE rmdi_svaz (
    num smallint,
    treg smallint
);


ALTER TABLE public.rmdi_svaz OWNER TO root;

--
-- Name: rmo_config; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE rmo_config (
    rmo1 smallint DEFAULT 0 NOT NULL,
    rmo2 smallint DEFAULT 0 NOT NULL,
    rmo3 smallint DEFAULT 0 NOT NULL,
    rmo4 smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.rmo_config OWNER TO root;

--
-- Name: rmo_stat; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE rmo_stat (
    dt timestamp without time zone,
    rmo smallint,
    kod smallint
);


ALTER TABLE public.rmo_stat OWNER TO root;

--
-- Name: sa_rpu; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE sa_rpu (
    num smallint NOT NULL,
    kod smallint,
    kreit1 smallint,
    cell1 smallint,
    chan1 smallint,
    kreit2 smallint,
    cell2 smallint,
    chan2 smallint,
    kreit3 smallint,
    cell3 smallint,
    chan3 smallint,
    kzn smallint,
    lsmena smallint,
    god smallint,
    konf smallint,
    kl smallint,
    psh smallint,
    gr smallint,
    dkl smallint,
    blk smallint,
    blk_i smallint,
    busy smallint
);


ALTER TABLE public.sa_rpu OWNER TO root;

--
-- Name: sig_rmo; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE sig_rmo (
    dt timestamp without time zone,
    ch smallint,
    kod smallint
);


ALTER TABLE public.sig_rmo OWNER TO root;

--
-- Name: smena; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE smena (
    dt timestamp without time zone,
    leader character(30) DEFAULT '-'::bpchar,
    eng1 character(30) DEFAULT '-'::bpchar,
    eng2 character(30) DEFAULT '-'::bpchar,
    tel1 character(30) DEFAULT '-'::bpchar,
    tel2 character(30) DEFAULT '-'::bpchar,
    tel3 character(30) DEFAULT '-'::bpchar,
    tel4 character(30) DEFAULT '-'::bpchar,
    eng_rmish character(30) DEFAULT '-'::bpchar,
    hlp_sign character(1) DEFAULT ','::bpchar
);


ALTER TABLE public.smena OWNER TO root;

--
-- Name: soed; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE soed (
    dt_order timestamp without time zone,
    dt_beg timestamp without time zone,
    dt_end timestamp without time zone,
    ch1 smallint,
    type1 character(5),
    num1 smallint,
    nmbr1 character(21),
    tsvaz1 smallint,
    fnum1 smallint,
    ch2 smallint,
    type2 character(5),
    num2 smallint,
    nmbr2 character(21),
    tsvaz2 smallint,
    fnum2 smallint,
    rmo smallint,
    avar smallint,
    sl smallint,
    name_rmo character(16)
);


ALTER TABLE public.soed OWNER TO root;

--
-- Name: sost_cells; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE sost_cells (
    ko smallint,
    kreit smallint,
    cell smallint,
    adr smallint NOT NULL,
    spuu_o smallint,
    spuu_r smallint,
    sost smallint,
    smoi smallint,
    type smallint DEFAULT 15,
    regim smallint,
    kod smallint,
    new_type smallint,
    new_regim smallint,
    old_type smallint,
    in_use smallint
);


ALTER TABLE public.sost_cells OWNER TO root;

--
-- Name: sost_sa_rpu; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE sost_sa_rpu (
    num smallint NOT NULL,
    from_a integer,
    to_a integer,
    nport smallint,
    port smallint,
    factory_number character(20),
    keyzone smallint,
    ki smallint,
    vs smallint,
    sendbuf smallint,
    dt_key timestamp without time zone
);


ALTER TABLE public.sost_sa_rpu OWNER TO root;

--
-- Name: svaz; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE svaz (
    num smallint,
    name text,
    ip text,
    net smallint,
    p1 smallint,
    p2 smallint,
    sp1 character(7),
    sp2 character(7),
    index_id integer DEFAULT 0 NOT NULL
);


ALTER TABLE public.svaz OWNER TO root;

--
-- Name: t_loglist; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE t_loglist (
    date_time timestamp without time zone,
    rmdisign smallint,
    ko smallint,
    kreit smallint,
    cell smallint,
    chan smallint,
    event character(255),
    action smallint DEFAULT 0 NOT NULL,
    eng_name character(30)
);


ALTER TABLE public.t_loglist OWNER TO root;

--
-- Name: tab_app; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tab_app (
    kod smallint NOT NULL,
    name character(16)
);


ALTER TABLE public.tab_app OWNER TO root;

--
-- Name: tab_kzn; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tab_kzn (
    num smallint,
    info character(100)
);


ALTER TABLE public.tab_kzn OWNER TO root;

--
-- Name: tab_regl; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tab_regl (
    kod smallint NOT NULL,
    soob character(15),
    menu_sign smallint DEFAULT 0 NOT NULL
);


ALTER TABLE public.tab_regl OWNER TO root;

--
-- Name: tab_regl_k4; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tab_regl_k4 (
    kod smallint,
    soob character(15),
    k4 character(6),
    kdg smallint,
    nac character(5),
    type smallint,
    menu_sign smallint DEFAULT 1 NOT NULL
);


ALTER TABLE public.tab_regl_k4 OWNER TO root;

--
-- Name: tab_soob; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tab_soob (
    kod smallint NOT NULL,
    soob character(30)
);


ALTER TABLE public.tab_soob OWNER TO root;

--
-- Name: tek_regl; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tek_regl (
    date_time timestamp(2) without time zone,
    type smallint,
    chan smallint,
    vrc smallint,
    kod smallint,
    nac character(5),
    fnum smallint,
    kind smallint
);


ALTER TABLE public.tek_regl OWNER TO root;

--
-- Name: tek_sign; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tek_sign (
    date_time timestamp(2) without time zone,
    type smallint,
    i_ko smallint,
    i_kreit smallint,
    i_cell smallint,
    i_chan smallint,
    ch1 smallint,
    fnum1 smallint,
    kod_soob smallint,
    r_ko smallint,
    r_kreit smallint,
    r_cell smallint,
    r_chan smallint,
    ch2 smallint,
    fnum2 smallint,
    tlf_num character(30),
    level smallint,
    type1 character(5),
    type2 character(5)
);


ALTER TABLE public.tek_sign OWNER TO root;

--
-- Name: tek_soob_rk; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tek_soob_rk (
    date_time timestamp(2) without time zone,
    type smallint,
    chan smallint,
    vrc smallint,
    kod smallint,
    nac character(5),
    fnum smallint,
    kind smallint DEFAULT 0
);


ALTER TABLE public.tek_soob_rk OWNER TO root;

--
-- Name: tel_ab; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tel_ab (
    num smallint,
    fio character(50),
    dolz character(50),
    dt timestamp(2) without time zone
);


ALTER TABLE public.tel_ab OWNER TO root;

--
-- Name: tel_list; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tel_list (
    num smallint,
    type smallint,
    zag character(50),
    dop character(50),
    nomer character(16),
    rmo smallint,
    dt timestamp(2) without time zone
);


ALTER TABLE public.tel_list OWNER TO root;

--
-- Name: tprz; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tprz (
    dt_beg timestamp without time zone,
    dt_end timestamp without time zone,
    ch_from smallint,
    ch_to smallint,
    ch_ab smallint,
    fnum smallint
);


ALTER TABLE public.tprz OWNER TO root;

--
-- Name: tregl; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE tregl (
    kod smallint,
    soob character(15)
);


ALTER TABLE public.tregl OWNER TO root;

SET default_with_oids = false;

--
-- Name: ui_ip; Type: TABLE; Schema: public; Owner: nick; Tablespace: 
--

CREATE TABLE ui_ip (
    index integer,
    name text,
    ip inet,
    type integer,
    sost boolean DEFAULT false
);


ALTER TABLE public.ui_ip OWNER TO nick;

SET default_with_oids = true;

--
-- Name: ups; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE ups (
    num smallint,
    sost smallint,
    ui integer,
    ui_contact integer
);


ALTER TABLE public.ups OWNER TO root;

SET default_with_oids = false;

--
-- Name: uso; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE uso (
    num smallint,
    name character(8),
    sost smallint,
    index smallint NOT NULL
);


ALTER TABLE public.uso OWNER TO root;

--
-- Name: view_conn; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW view_conn AS
    SELECT c.dt, o1.type AS type1, o1.num AS num1, o1.name AS name1, o1.vinf AS nmbr1, o1.otb AS otb1, o1.snx AS snx1, o1.avar AS avar1, o1.grif AS grif1, c.zc1, c.azc1, o2.type AS type2, o2.num AS num2, o2.name AS name2, o2.vinf AS nmbr2, o2.otb AS otb2, o2.snx AS snx2, o2.avar AS avar2, o2.grif AS grif2, c.zc2, c.azc2, o1.rmo FROM conn c, out_chan o1, out_chan o2 WHERE ((((((((o1.ko = c.ko1) AND (o1.kreit = c.kreit1)) AND (o1.cell = c.cell1)) AND (o1.chan = c.chan1)) AND (o2.ko = c.ko2)) AND (o2.kreit = c.kreit2)) AND (o2.cell = c.cell2)) AND (o2.chan = c.chan2));


ALTER TABLE public.view_conn OWNER TO root;

--
-- Name: view_conn_sa; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW view_conn_sa AS
    SELECT o1.ko AS ko1, o1.n_sa_rpu AS sa1, o1.sost AS s1, o2.ko AS ko2, o2.n_sa_rpu AS sa2, o2.sost AS s2 FROM conn c, out_chan o1, out_chan o2 WHERE (((((((((o1.ko = c.ko1) AND (o1.kreit = c.kreit1)) AND (o1.cell = c.cell1)) AND (o1.chan = c.chan1)) AND (o2.ko = c.ko2)) AND (o2.kreit = c.kreit2)) AND (o2.cell = c.cell2)) AND (o2.chan = c.chan2)) AND ((o1.n_sa_rpu > 0) OR (o2.n_sa_rpu > 0)));


ALTER TABLE public.view_conn_sa OWNER TO root;

--
-- Name: view_conn_short; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW view_conn_short AS
    SELECT (((((c.ko1 * 4096) + (c.kreit1 * 512)) + (c.cell1 * 16)) + c.chan1))::smallint AS ch1, (((((c.ko2 * 4096) + (c.kreit2 * 512)) + (c.cell2 * 16)) + c.chan2))::smallint AS ch2, o1.rmo FROM conn c, out_chan o1 WHERE (((((o1.ko = c.ko1) AND (o1.kreit = c.kreit1)) AND (o1.cell = c.cell1)) AND (o1.chan = c.chan1)) AND (c.dt IS NOT NULL));


ALTER TABLE public.view_conn_short OWNER TO root;

--
-- Name: view_sost_sa; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW view_sost_sa AS
    SELECT o.n_sa_rpu AS nsa, s.from_a AS ssa, sa.blk, sa.blk_i, ((((o.ko * 4096) + (o.kreit * 512)) + (o.cell * 16)) + o.chan) AS ch, o.sost AS sch FROM out_chan o, sost_sa_rpu s, sa_rpu sa WHERE (((((o.sost > 0) AND (o.sost <= 5)) AND (o.type = 'ПК'::bpchar)) AND (o.n_sa_rpu = s.num)) AND (s.num = sa.num));


ALTER TABLE public.view_sost_sa OWNER TO root;

--
-- Name: view_tranzit; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW view_tranzit AS
    SELECT o1.n_sa_rpu AS sa1, o2.n_sa_rpu AS sa2 FROM conn c, out_chan o1, out_chan o2 WHERE ((((((((((o1.ko = c.ko1) AND (o1.kreit = c.kreit1)) AND (o1.cell = c.cell1)) AND (o1.chan = c.chan1)) AND (o2.ko = c.ko2)) AND (o2.kreit = c.kreit2)) AND (o2.cell = c.cell2)) AND (o2.chan = c.chan2)) AND (o1.n_sa_rpu > 0)) AND (o2.n_sa_rpu > 0));


ALTER TABLE public.view_tranzit OWNER TO root;

SET default_with_oids = true;

--
-- Name: vkk; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE vkk (
    num smallint,
    vrc smallint,
    mar smallint,
    crs smallint,
    fnum smallint,
    freq character(300)
);


ALTER TABLE public.vkk OWNER TO root;

--
-- Name: vmar; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW vmar AS
    SELECT c.rm_vrc, c.mar AS vmar, mar4_to_int(r.mar) AS mar, r.mar_rc, r.fnum, ((((o.ko * 4096) + (o.kreit * 512)) + (o.cell * 16)) + o.chan) AS chan FROM rk r, conf_prz c, out_chan o WHERE (((((((r.kind = 'К4'::bpchar) AND (c.kind = 4)) AND ((((r.mar_rc = 1) OR (r.mar_rc = 4)) OR (r.mar_rc = 5)) OR (r.mar_rc = 6))) AND (r.sost_rc = 27)) AND (c.rm_vrc = r.rm_vrc)) AND (r.num = o.num)) AND (o.type = 'РК'::bpchar));


ALTER TABLE public.vmar OWNER TO root;

--
-- Name: vmar_apzk; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW vmar_apzk AS
    SELECT c.rm_vrc, c.mar AS vmar, c.apzk, mar_to_int(r.mar, (r.kl)::integer) AS mar, r.mar_rc, r.sost_rc, r.fnum, ((((o.ko * 4096) + (o.kreit * 512)) + (o.cell * 16)) + o.chan) AS chan, c.chan_apzk FROM rk r, conf_prz c, out_chan o WHERE (((((((r.kind = 'К9'::bpchar) AND (c.kind = 9)) AND (c.rm_vrc = r.rm_vrc)) AND (r.num = o.num)) AND (o.type = 'РК'::bpchar)) AND (r.mar_rc <> 12)) AND ((r.sost_rc = 27) OR (r.sost_rc = 23)));


ALTER TABLE public.vmar_apzk OWNER TO root;

--
-- Name: vmar_k9; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW vmar_k9 AS
    SELECT c.rm_vrc, c.mar AS vmar, mar_to_int(r.mar, (r.kl)::integer) AS mar, r.mar_rc, r.fnum, ((((o.ko * 4096) + (o.kreit * 512)) + (o.cell * 16)) + o.chan) AS chan FROM rk r, conf_prz c, out_chan o WHERE (((((((r.kind = 'К9'::bpchar) AND (c.kind = 9)) AND (((r.mar_rc >= 3) AND (r.mar_rc <= 6)) OR ((r.mar_rc >= 91) AND (r.mar_rc <= 98)))) AND (r.sost_rc = 27)) AND (c.rm_vrc = r.rm_vrc)) AND (r.num = o.num)) AND (o.type = 'РК'::bpchar));


ALTER TABLE public.vmar_k9 OWNER TO root;

--
-- Name: vwrk; Type: VIEW; Schema: public; Owner: root
--

CREATE VIEW vwrk AS
    SELECT r.kind, r.rm_vrc, o.num FROM rk r, out_chan o WHERE ((((r.num = o.num) AND (o.type = 'РК'::bpchar)) AND (o.sost = 0)) AND (r.sost_rc = 27));


ALTER TABLE public.vwrk OWNER TO root;

SET default_with_oids = false;

--
-- Name: work_user_rmo; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE work_user_rmo (
    id integer NOT NULL,
    ch1 smallint,
    kod smallint,
    ch2 smallint,
    nrmo smallint,
    nmbr text
);


ALTER TABLE public.work_user_rmo OWNER TO root;

--
-- Name: work_user_rmo_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE work_user_rmo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.work_user_rmo_id_seq OWNER TO root;

--
-- Name: work_user_rmo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE work_user_rmo_id_seq OWNED BY work_user_rmo.id;


SET default_with_oids = true;

--
-- Name: zapret; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE zapret (
    spisok smallint,
    ac smallint
);


ALTER TABLE public.zapret OWNER TO root;

--
-- Name: zapret_prz; Type: TABLE; Schema: public; Owner: root; Tablespace: 
--

CREATE TABLE zapret_prz (
    v1 smallint,
    v2 smallint
);


ALTER TABLE public.zapret_prz OWNER TO root;

--
-- Name: id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY work_user_rmo ALTER COLUMN id SET DEFAULT nextval('work_user_rmo_id_seq'::regclass);


--
-- Data for Name: check_change; Type: TABLE DATA; Schema: public; Owner: root
--

COPY check_change (table_id, table_name, change_num, table_oid) FROM stdin;
13	sig_rmo             	26	18660
14	soed                	182	24556
23	tab_kzn             	1633	178665
5	kulon               	59	21303
5	kulon               	59	21303
23	tab_kzn             	1633	178665
13	sig_rmo             	26	18660
14	soed                	182	24556
4	flag                	353137	573896
4	flag                	353137	573896
21	zapret_prz          	402	2000685
21	zapret_prz          	402	2000685
10	pk                  	997	176030
10	pk                  	997	176030
7	nsd                 	785287	175840
7	nsd                 	785287	175840
11	rk                  	287658	176862
11	rk                  	287658	176862
3	conn                	128537	2724232
3	conn                	128537	2724232
15	sost_cells          	947450	178544
15	sost_cells          	947450	178544
20	zapret              	207	1157197
20	zapret              	207	1157197
6	nastr               	74067	175689
6	nastr               	74067	175689
18	tek_soob_rk         	426602	952297
18	tek_soob_rk         	426602	952297
22	smena               	72	1870915
22	smena               	72	1870915
8	num_as              	294	2316271
8	num_as              	294	2316271
1	color               	87	16704
1	color               	87	16704
2	conf_prz            	8521	16707
2	conf_prz            	8521	16707
16	sost_sa_rpu         	486107	42999
16	sost_sa_rpu         	486107	42999
9	out_chan            	5496544	17410
9	out_chan            	5496544	17410
12	sa_rpu              	3063130	20806
12	sa_rpu              	3063130	20806
17	svaz                	40739	43041
17	svaz                	40739	43041
19	ups                 	613866	18096
19	ups                 	613866	18096
\.


--
-- Data for Name: color; Type: TABLE DATA; Schema: public; Owner: root
--

COPY color (kod, r, g, b, name, r_text, g_text, b_text) FROM stdin;
9	0	0	255	Готовность СА/АРПУ            	255	255	0
18	230	0	0	Авария в состоянии соединения 	0	0	0
12	0	128	128	Режим АПЗК                    	255	255	255
19	210	255	250	СНИ                           	0	0	0
16	255	6	51	 Последний аппарат (в зоне)   	0	0	0
23	255	202	155	Обрыв канала                  	0	0	0
25	255	88	91	Отсутствие КИ                 	0	0	0
22	255	153	0	СОИ                           	0	0	0
17	255	0	0	Авария                        	255	255	0
24	204	153	255	 ВС                           	0	0	0
26	255	153	0	Проверка (КС)                 	0	0	0
27	122	122	122	Автоматическая блокировка     	0	0	0
15	255	221	24	Предпоследний аппарат (в зоне)	0	0	255
1	2	2	2	Отсутствие                    	255	255	255
2	190	190	190	Блокировка                    	0	0	0
11	20	195	248	Соединение                    	255	255	255
13	255	206	58	Несекретно                    	0	0	255
6	157	255	51	Режим ПРМ                     	0	0	0
10	251	255	169	Выделенный маркер             	0	0	0
7	0	255	119	Секретно                      	0	0	0
5	76	255	0	Вызов                         	0	0	0
4	116	146	255	Режим ПРД                     	255	255	0
14	255	255	0	Отбой                         	0	0	255
21	255	85	0	Нет синхронизма               	0	0	255
3	8	0	253	Готовность оборудования       	255	255	0
8	255	170	255	Удержание                     	85	85	127
28	255	255	0	Один ключ                     	255	0	0
20	85	255	255	Синхронизм                    	0	0	0
\.


--
-- Data for Name: conf_prz; Type: TABLE DATA; Schema: public; Owner: root
--

COPY conf_prz (rm_vrc, nazv, mar, apzk, kind, chan_vm, chan_apzk) FROM stdin;
1	SochiAdler                    	0	0	4	0	0
2	KrPolyana                     	0	0	4	0	0
3	More                          	0	0	4	0	0
4	Viezd                         	0	0	4	0	0
7	Room507                       	0	0	4	0	0
\.


--
-- Data for Name: conn; Type: TABLE DATA; Schema: public; Owner: root
--

COPY conn (dt, ko1, kreit1, cell1, chan1, ko2, kreit2, cell2, chan2, sel, zc1, zc2, azc1, azc2) FROM stdin;
2013-11-07 15:21:26.07	1	1	14	6	1	1	4	7	\N	0	0	0	0
\.


--
-- Data for Name: current_smena; Type: TABLE DATA; Schema: public; Owner: root
--

COPY current_smena (dt, leader, eng1, eng2, tel1, tel2, tel3, tel4, eng_rmish, hlp_sign) FROM stdin;
2013-09-24 14:41:42.77041	Касаткин                      	Макаревский                   	Шабанов                       	Рева                          	Кармацкая                     	                              	                              	Богданов                      	,
\.


--
-- Data for Name: doc_integrity; Type: TABLE DATA; Schema: public; Owner: root
--

COPY doc_integrity (dt, equip_id, integr_sign, event, rmdi_sign, eng_name) FROM stdin;
\.


--
-- Data for Name: doc_nsd; Type: TABLE DATA; Schema: public; Owner: root
--

COPY doc_nsd (dt, ko, event, eng_name) FROM stdin;
2013-11-08 09:01:08.82121	36	РМИШ перешел в состояние Контролируемое ВД                                                                                                                                                                                                                     	                              
2013-11-08 09:10:51.721454	12	УПС1 перешел в состояние Несанкционированное ВД                                                                                                                                                                                                                	                              
2013-11-08 09:12:31.381698	12	УПС1 перешел в состояние Двери закрыты после несанкционированного ВД                                                                                                                                                                                           	                              
2013-11-08 09:13:02.008847	14	ЯШ136 Эл. пит. перешел в состояние Несанкционированное ВД                                                                                                                                                                                                      	                              
2013-11-08 09:13:16.98166	11	ОКС ТОФМ перешел в состояние Несанкционированное ВД                                                                                                                                                                                                            	                              
2013-11-08 09:14:16.493708	5	ЦУУ1 перешел в состояние Несанкционированное ВД                                                                                                                                                                                                                	                              
2013-11-08 09:15:23.950037	14	ЯШ136 Эл. пит. перешел в состояние Двери закрыты после несанкционированного ВД                                                                                                                                                                                 	                              
2013-11-08 09:16:04.939076	2	АКО перешел в состояние Завершение работ                                                                                                                                                                                                                       	                              
2013-11-08 09:18:37.163692	5	ЦУУ1 перешел в состояние Несанкционированное ВД                                                                                                                                                                                                                	Шабанов                       
2013-11-08 09:18:38.58509	11	ОКС ТОФМ  перешел в состояние Контролируемое ВД                                                                                                                                                                                                                	Шабанов                       
2013-11-08 09:18:39.071053	11	ОКС ТОФМ перешел в состояние Контролируемое ВД                                                                                                                                                                                                                 	                              
2013-11-08 09:18:39.663637	5	ЦУУ1 перешел в состояние Контролируемое ВД                                                                                                                                                                                                                     	Шабанов                       
2013-11-08 09:18:40.322551	5	ЦУУ1 перешел в состояние Контролируемое ВД                                                                                                                                                                                                                     	                              
2013-11-08 09:18:41.201878	12	УПС1 перешел в состояние Норма (закрыто)                                                                                                                                                                                                                       	Шабанов                       
2013-11-08 09:18:42.331518	14	ЯШ136 Эл. пит. перешел в состояние Норма (закрыто)                                                                                                                                                                                                             	Шабанов                       
2013-11-08 09:18:43.890876	21	КАРС АС перешел в состояние Норма (закрыто)                                                                                                                                                                                                                    	Шабанов                       
2013-11-08 09:18:45.355001	2	АКО перешел в состояние Норма (закрыто)                                                                                                                                                                                                                        	Шабанов                       
2013-11-08 09:19:41.331973	11	ОКС ТОФМ перешел в состояние Завершение работ                                                                                                                                                                                                                  	                              
\.


--
-- Data for Name: flag; Type: TABLE DATA; Schema: public; Owner: root
--

COPY flag (flag, marker, cycn, busy_sp, ved_cuu, zapret) FROM stdin;
0	0	20802	4	1	0
\.


--
-- Data for Name: integrity; Type: TABLE DATA; Schema: public; Owner: root
--

COPY integrity (cuu1, cuu2, rmo1, rmo2, rmo3, rmo4, rmdi1, rmdi2, rmish, database) FROM stdin;
1	1	0	0	0	0	0	0	0	0
\.


--
-- Data for Name: k4_help; Type: TABLE DATA; Schema: public; Owner: root
--

COPY k4_help (kod, soob, kdg, bit_4, bit_5, bit_6, bit_7, type, order_index) FROM stdin;
91	М1             	6_   	0_      	0_   	0_   	0_   	3	1
94	М2             	4_   	0_      	0_   	0_   	0_   	3	2
95	СМ1            	5_   	0_      	0_   	0_   	0_   	3	3
98	СМ2            	1_   	0_      	0_   	0_   	0_   	3	4
99	КД             	3_   	0_      	0_   	0_   	0_   	3	5
22	СЗК0           	2_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	6
24	СЗКН           	7_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	8
25	СОА            	1_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	10
14	КПВ            	9_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	9
11	ИВ             	0_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	1	11
113	ИВЦ            	9_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	1	12
0	СНХ            	0_   	0_      	0_   	0_   	0_   	3	29
33	Зпр С          	8_   	0, № рц_	1_   	1_   	3_   	1	13
27	ВКЛ ПРД        	8_   	0, № рц_	1_   	1_   	1_   	1	14
28	ВЫКЛ ПРД       	8_   	0, № рц_	1_   	1_   	2_   	1	15
29	ВКЛ Ш1         	8_   	0, № рц_	1_   	1_   	5_   	1	16
60	ВКЛ Ш2         	8_   	0, № рц_	1_   	1_   	6_   	1	17
37	Ав ПРД         	8_   	0, № рц_	1_   	2_   	6_   	2	18
38	Ав ПРМ         	8_   	0, № рц_	1_   	2_   	7_   	2	19
39	Ав АФУ         	8_   	0, № рц_	1_   	2_   	3_   	2	20
41	Ав ФП          	8_   	0, № рц_	1_   	2_   	4_   	2	21
43	Норма          	8_   	0, № рц_	1_   	1_   	3_   	2	22
27	ПДТ ВКЛ ПРД    	8_   	0, № рц_	1_   	1_   	1_   	2	23
28	ПДТ ВЫКЛ ПРД   	8_   	0, № рц_	1_   	1_   	2_   	2	24
29	ПДТ ВКЛ Ш1     	8_   	0, № рц_	1_   	1_   	5_   	2	25
60	ПДТ ВКЛ Ш2     	8_   	0_      	1_   	1_   	6_   	2	26
45	ПЖ             	8_   	0, № рц_	1_   	2_   	1_   	2	27
71	НСД            	8_   	0, № рц_	1_   	2_   	2_   	2	28
115	ВКЛ ПИТ        	8_   	0, № рц_	1_   	1_   	9_   	1	30
17	СОЦ            	7_   	0, № рц_	0_   	0_   	0_   	1	31
68	ВКЛ Р ПРД      	8_   	0, № рц_	0_   	0_   	0_   	1	33
34	СОИ            	8_   	0, РЦ_  	0_   	0_   	9_   	1	35
35	СНИ            	8_   	0, РЦ_  	0_   	0_   	8_   	1	34
65	ВКЛ ПРГ ПРМ    	8_   	0, № рц_	3_   	1_   	1_   	1	36
42	ПДТ ВКЛ ПРМ    	8_   	0, № рц_	3_   	1_   	1_   	1	37
76	ЗПР РЕЖ        	8_   	0, № рц_	3_   	0_   	0_   	1	38
77	РЕЖ            	8_   	реж_    	3_   	0_   	0_   	2	39
126	ПДТ ПРЗ (ВЦ КК)	8_   	РЦ_     	9_   	9_   	9_   	1	40
66	ВКЛ ПРГ ПРД    	8(6)_	6_      	0_   	0_   	0_   	1	41
125	ПРЗ БУ КК      	6_   	6_      	5_   	5_   	5_   	1	42
200	РЕГЛ КК        	6_   	6_      	9_   	9_   	9_   	1	43
127	ЗПР П БОНС     	8_   	0_      	5_   	5_   	5_   	1	44
128	ПАРАМ БОНС     	6_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	45
123	ВЧ КК          	8_   	9_      	9_   	0-9_ 	0-9_ 	1	46
124	ПДТ ВЧ КК      	8_   	9_      	9_   	0-9_ 	0-9_ 	2	47
100	ВЫКЛ РЕГЛ      	8_   	0_      	9_   	9_   	0_   	1	49
101	ВКЛ РЕГЛ       	8_   	0_      	9_   	9_   	1_   	1	48
121	ПДТ ВКЛ РЕГЛ   	8_   	0_      	9_   	9_   	1_   	2	50
122	ПДТ ВЫКЛ РЕГЛ  	8_   	0_      	9_   	9_   	0_   	2	51
18	СЗКА           	9_   	0-9_    	0-9_ 	0-9_ 	0-9_ 	2	7
115	ПДТ ВКЛ ПИТ    	8_   	0, № рц_	1_   	1_   	9_   	2	32
\.


--
-- Data for Name: k9_help; Type: TABLE DATA; Schema: public; Owner: root
--

COPY k9_help (kod, soob, num_as, type, order_index) FROM stdin;
0	СИНХ Р РЦ      	!0000     	1	1
1	КПВ-А          	!0000-9999	1	2
2	СЗ-А           	!0000-9999	1	3
3	М3-1           	!0000     	3	4
4	М3-2           	!0000     	3	5
5	СМ3-1          	!0000     	3	6
6	СМ3-2          	!0000     	3	7
7	ВЧ АПЗК        	!0000     	1	8
8	АВ КРК КК      	!0000     	2	9
9	АВ КОМ КК      	!0000     	2	10
10	СМН РПУ        	!0000-9999	1	11
11	ИВ             	!0000-9999	1	12
12	ИВ-К           	!0000-9999	1	13
13	ИВ-Ц           	!0000-9999	1	14
14	КПВ            	!0000     	1	15
15	СМН-А          	!0000     	1	16
17	СОЦ            	!0000     	1	17
18	СЗКА-1         	!0000     	1	18
19	ПДТ СМН        	!0000     	1	19
20	АВ БП КК       	!0000     	2	20
21	СЗКА-2         	!0000     	1	21
22	СЗКА-0         	!0000     	1	22
23	ВКЛ  АПЗК      	!0000     	1	23
24	СЗКА-Н         	!0000     	1	24
25	СОА            	!0000     	1	25
27	ВКЛ  ПРД РЦ    	!0000     	1	26
28	ВКЛ  ДЕЖ  РЦ   	!0000     	1	27
29	ВКЛ  Ш  РЦ     	!0000     	1	28
30	АВ ПДТ РЦ      	!0000     	2	29
32	ПДТ            	!0000     	1	30
33	ЗПР            	!0000     	1	31
34	СОИ            	!0000     	1	32
35	СНИ            	!0000     	1	33
37	АВ ПРД РЦ      	!0000     	2	34
38	АВ ПРМ РЦ      	!0000     	2	35
39	АВ АФУ РЦ      	!0000     	2	36
40	АВ СЛ РЦ       	!0000     	2	37
41	АВ ФП РЦ       	!0000     	2	38
42	ПДТ КМ         	!0000     	1	39
43	Норма          	!0000     	1	40
44	АВ ВД КК       	!0000     	2	41
45	АВ ПЖ КК       	!0000     	2	42
46	ВКЛ РТ_Н       	!0000-9999	1	43
47	ВЫКЛ РТ_Н      	!0000-9999	1	44
48	ВКЛ Ш РТ_Н     	!0000-9999	1	45
49	РЕЖ РТ_Н       	!0000     	1	46
50	АВ СЛ РТ_Н     	!0000     	2	47
51	ПДТ С РТ_Н     	!0000-9999	1	48
52	АВ ПРД РТ_Н    	!0000     	2	49
53	АВ ПРМ РТ_Н    	!0000     	2	50
54	СОИ РТ_Н       	!0000     	1	51
55	АВ АФУ РТ_Н    	!0000     	2	52
56	АВ ФП РТ_Н     	!0000     	2	53
57	ПДТ КМ РТ_Н    	!0000     	1	54
58	ВКЛ РТ_Л       	!0000-9999	1	55
59	ВЫКЛ РТ_Л      	!0000-9999	1	56
60	ВКЛ ШРТ_Л      	!0000-9999	1	57
62	ПРЗ БУ КК      	!0000     	1	58
63	ПДТ КМ РТ_Л    	!0000     	1	59
64	ПД Т ПРЗ РЦ    	!0000     	1	60
65	ВКЛ  ПРГ  ПРМ  	!0000     	1	61
66	ВКЛ  ПРГ  ПРД  	!0000     	1	62
67	ВП КК          	!0000-9999	1	63
68	ВКЛ АР КП      	!0000     	1	64
69	ВКЛ РЕГЛ КК    	!0000     	1	65
70	ПДТ ПРЗ КК     	!0000-9999	1	66
71	НСД РЦ         	!0000     	2	67
72	АВ БУ          	!0000     	2	68
73	СЗКА-АВТ       	!0000     	1	69
74	СВН            	!0000-9999	1	70
75	ЗПР РЕЖ РТ_Н   	!0000-9999	1	71
76	ЗПР РЕЖ        	!0000     	1	72
77	РЕЖ            	!0000     	1	73
79	ПДТ ПРЗ РТ_Н   	!0000-9999	1	74
80	ПРЗ БУ РТ_Н    	!0000     	1	75
81	СН-1           	!0000-9999	1	76
82	СН-2           	!0000-9999	1	77
83	СН-3           	!0000-9999	1	78
84	СН-4           	!0000-9999	1	79
85	СН-5           	!0000-9999	1	80
86	СН-6           	!0000-9999	1	81
87	СН-7           	!0000-9999	1	82
88	СОН            	!0000     	1	83
89	ПРЗ БУ РЦ      	!0000     	1	84
90	НСД РТ_Н       	!0000     	1	85
91	М1-1           	!0000     	3	86
92	М1-2           	!0000     	3	87
93	М2-1           	!0000     	3	88
94	М2-2           	!0000     	3	89
95	СМ1-1          	!0000     	3	90
96	СМ1-2          	!0000     	3	91
97	СМ2-1          	!0000     	3	92
98	СМ2-2          	!0000     	3	93
99	КД             	!0000     	3	94
100	Выключить регл 	!0000     	2	95
101	Включить регл  	!0000     	2	96
201	КПВ-А          	!0000     	1	97
206	СОА-Н          	!0000     	1	98
207	ВЧ  АПЗК       	!0000     	1	99
244	АВ ВД          	!0000     	2	100
245	АВ ПЖ          	!0000     	2	101
266	ВКЛ РР КП      	!0000     	1	102
269	ПДТ КМ КП      	!0000     	1	103
\.


--
-- Data for Name: kulon; Type: TABLE DATA; Schema: public; Owner: root
--

COPY kulon (num, zsb) FROM stdin;
41	0
9	0
27	0
36	0
42	0
43	0
6	0
19	0
8	0
10	0
44	0
45	0
46	0
21	0
35	0
48	0
3	0
47	0
2	0
12	0
4	0
14	0
1	0
5	0
16	0
7	0
18	0
20	0
22	0
24	0
26	0
28	0
30	0
32	0
34	0
38	0
40	0
11	0
13	0
15	0
17	0
23	0
25	0
29	0
31	0
33	0
37	0
39	0
\.


--
-- Data for Name: kzn_dkl; Type: TABLE DATA; Schema: public; Owner: root
--

COPY kzn_dkl (kzn, dkl) FROM stdin;
2	1
3	2
1	1
30	2
11	2
6	1
4	1
5	1
9	1
48	2
47	1
46	1
20	1
7	1
8	1
10	1
12	1
13	1
14	1
15	1
16	1
17	1
18	1
19	1
21	1
22	1
23	1
24	1
25	1
26	1
27	1
28	1
29	1
31	1
32	1
33	1
34	1
35	1
36	1
37	1
38	1
39	1
40	1
41	1
42	1
43	1
44	1
45	1
\.


--
-- Data for Name: loglist; Type: TABLE DATA; Schema: public; Owner: root
--

COPY loglist (date_time, rmdisign, ko, kreit, cell, chan, event, action, eng_name) FROM stdin;
2013-11-08 00:40:48.356675	1	10	1	8	0	СА перешел в состояние Нет синхронизма                                                                                                                                                                                                                         	0	                              
2013-11-08 09:21:51.508423	2	10	1	5	0	Установлена команда Работа                                                                                                                                                                                                                                     	1	Шабанов                       
\.


--
-- Data for Name: nastr; Type: TABLE DATA; Schema: public; Owner: root
--

COPY nastr (ch_num, line, nabor, prm, prd, usil, pol, pod, exo, level, freq, tone, imp_otb, p_otb, dop, interv, vkla, vviz) FROM stdin;
4850	\N	\N	10	9	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8775	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4694	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4660	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4775	0	0	9	0	0	0	1	0	0	0	0	0	0	0	0	0	0
8950	1	0	0	0	0	0	\N	1	0	0	0	0	0	0	0	0	0
4674	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4675	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4676	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4689	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4838	1	1	5	6	0	0	3	0	0	0	0	0	0	0	0	0	0
8769	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8770	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8771	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8772	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8785	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8786	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8787	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8788	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8801	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8802	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8803	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8804	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8817	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8818	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8819	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8820	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8833	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8834	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8835	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8836	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8849	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8850	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8851	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8852	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8865	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8866	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8867	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8868	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8881	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8882	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8883	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8884	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8897	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8898	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8899	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8900	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8913	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8914	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8915	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8916	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8929	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8930	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8931	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8932	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8945	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8946	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8947	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8948	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4693	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
8776	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4695	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
8838	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8839	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8840	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8837	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8853	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4696	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
8854	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8741	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4726	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4690	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8742	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
8757	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4723	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8758	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
8759	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
8760	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4776	0	0	11	0	0	0	1	0	0	0	0	0	0	0	0	0	0
4774	0	0	11	0	0	0	1	0	0	0	0	0	0	0	0	0	0
8885	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8886	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8901	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8902	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8903	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8904	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4743	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4744	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0
4742	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0
4737	1	1	9	12	0	0	0	0	0	0	0	0	0	0	0	0	0
8887	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8888	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4738	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4773	0	0	11	0	0	0	3	0	0	0	0	0	0	0	0	0	0
8855	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4739	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
8856	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8936	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
4740	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
4691	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4741	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0	0
4692	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4789	0	0	11	0	0	0	7	0	0	0	0	0	0	0	0	0	0
4705	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4790	0	0	11	0	0	0	9	0	0	0	0	0	0	0	0	0	0
4706	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4707	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4708	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4791	0	0	11	0	0	0	7	0	0	0	0	0	0	0	0	0	0
4711	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4712	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
8743	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4721	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4728	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4849	\N	\N	10	9	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4664	1	1	4	5	0	0	1	0	0	0	0	0	0	0	0	0	0
4724	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4769	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4770	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4771	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4772	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4785	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4677	1	1	4	5	0	0	2	0	0	0	0	0	0	0	0	0	0
4678	1	1	4	5	0	0	3	0	0	0	0	0	0	0	0	0	0
4819	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4820	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4786	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4727	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4753	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
4754	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
4755	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
4756	1	1	9	8	0	0	0	0	0	0	0	0	0	0	0	0	0
4757	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4758	0	0	0	0	0	0	6	0	0	0	0	0	0	0	0	0	0
4759	0	0	8	7	0	0	1	0	0	0	0	0	0	0	0	0	0
4760	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4787	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4788	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4801	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4802	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4807	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4805	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4808	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4792	0	0	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4803	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4804	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4817	1	1	9	0	6	6	6	0	0	0	0	0	0	0	0	0	0
4818	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4722	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4709	0	0	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4679	1	1	4	5	0	0	3	0	0	0	0	0	0	0	0	0	0
4822	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4657	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8934	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
8869	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4625	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4626	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4627	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4628	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4629	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4630	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4631	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4632	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8933	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
4648	1	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
4823	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4824	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
4680	1	1	4	5	0	0	3	0	0	0	0	0	0	0	0	0	0
4662	1	1	4	5	0	0	1	0	0	0	0	0	0	0	0	0	0
4821	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
8920	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
4837	0	1	4	5	0	0	0	0	0	0	0	0	0	0	0	0	0
8949	1	0	0	0	0	0	\N	1	0	0	0	0	0	0	0	0	0
4839	0	1	4	5	0	0	3	1	0	0	0	0	0	0	0	0	0
8725	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8726	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8727	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8728	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8917	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
4840	0	1	4	5	0	0	0	1	0	0	0	0	0	0	0	0	0
4645	1	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
8805	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4641	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8744	0	0	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4646	1	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
4642	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8806	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8807	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4806	0	1	7	8	2	21	1	1	0	2	3	0	0	0	0	1	1
8870	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4710	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
8871	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8872	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4643	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8821	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8822	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4836	1	1	10	9	0	0	0	0	0	0	0	0	0	0	0	0	0
8823	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8918	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
8808	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4853	0	1	5	6	0	0	\N	0	0	0	0	0	0	0	0	0	0
4854	0	1	5	6	0	0	\N	0	0	0	0	0	0	0	0	0	0
8919	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
4855	0	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
4856	0	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
8789	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8824	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4835	1	1	10	9	0	0	0	0	0	0	0	0	0	0	0	0	0
8790	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4673	1	1	9	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4647	1	1	4	5	0	0	\N	0	0	0	0	0	0	0	0	0	0
8951	1	4	0	0	0	0	\N	0	0	0	0	0	0	0	0	0	0
4834	1	1	10	9	0	0	0	0	0	0	0	0	0	0	0	0	0
4725	0	1	9	0	2	21	1	1	0	2	2	0	0	0	0	1	0
4663	1	1	4	5	0	0	1	0	0	0	0	0	0	0	0	0	0
4833	1	1	10	9	0	0	0	0	0	0	0	0	0	0	0	0	0
4661	1	1	4	5	0	0	1	0	0	0	0	0	0	0	0	0	0
4644	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8935	1	0	0	0	0	0	0	1	0	0	0	0	0	0	0	0	0
8791	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8792	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
8952	1	0	0	0	0	0	\N	1	0	0	0	0	0	0	0	0	0
8773	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4852	\N	\N	10	9	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
8774	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
4851	\N	\N	10	9	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4658	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
4659	\N	\N	9	0	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: nsd; Type: TABLE DATA; Schema: public; Owner: root
--

COPY nsd (name, but_id, state, in_signal, out_signal, line_id, ko, index, ui, ui_contact) FROM stdin;
ФП2 ГШ	46	0	2	2	8	60	85	21	1
К05М 1-4 в	21	1	2	2	10	22	43	0	3
ФП1 КО	43	0	2	2	5	60	82	12	2
УПС1 з	11	0	2	2	68	12	23	18	3
К05М 9-12 н	23	1	2	2	13	24	46	1	2
К05М 5-8 в	22	1	2	2	12	23	45	0	1
ЦКО з	3	0	2	2	54	4	7	14	3
К05М 9-12 в	23	1	2	2	14	24	47	1	3
РМДИ2 з	19	4	1	2	76	20	39	20	3
К05М 17-20 в	25	1	2	2	18	26	51	2	3
кросс С з	12	0	2	2	78	13	25	21	1
К05М 37-40 н	30	1	2	2	28	31	60	4	0
К05М 25-28 в	27	1	2	2	21	28	55	3	3
УПС2 п	8	0	2	2	61	9	16	17	0
ОКС МТ з	36	0	2	2	38	37	73	7	1
К05М 29-32 н	28	1	2	2	24	29	56	3	0
ОКС ТОФМ з	10	0	2	2	66	11	21	18	1
К05М 33-36 в	29	1	2	2	25	30	59	4	3
К05М 13-16 в	24	1	2	2	16	25	49	1	1
К05М 37-40 в	30	1	2	2	27	31	61	4	1
ЯШ136 Эл. пит. з	13	0	2	2	46	14	27	12	1
KAPC CA 1 в	31	1	2	2	30	32	63	5	3
К05М 5-8 н	22	1	2	2	11	23	44	0	0
ЗШКО н	32	0	2	2	32	33	64	5	0
АРПУ в 	33	1	2	2	33	34	67	6	3
КАРС АС з	20	0	2	2	60	21	41	16	1
К05М 13-16 н	24	1	2	2	15	25	48	1	0
БП1 ГШ	41	0	2	2	3	48	80	22	0
ЯШ131 ОКС БИ п	37	1	2	2	39	38	74	8	2
ЯШ131 ОКС БИ з	37	1	2	2	40	38	75	8	3
ЯШ136-1 Эл. пит. п	38	1	2	2	41	39	76	8	0
ЯШ136-1 Эл. пит. з	38	1	2	2	42	39	77	8	1
КО ЛВС в	34	0	2	2	35	35	69	6	1
РМИШ з	35	4	1	2	44	36	71	7	3
УПС1 п	11	0	2	2	67	12	22	18	2
ФП2 КО	44	0	2	2	6	60	83	12	3
КАРС АС п	20	0	2	2	59	21	40	16	0
К05М 29-32 в	28	1	2	2	23	29	57	3	1
РМО2 з	15	0	2	2	72	16	31	19	3
К05М 17-20 н	25	1	2	2	17	26	50	2	2
РМДИ2 п	19	0	2	2	75	20	38	20	2
ОКС МТ п	36	0	1	2	37	37	72	7	0
РМИШ п	35	0	1	2	43	36	70	7	2
БП2 ГШ	42	0	2	1	4	48	81	22	1
КО ЛВС н	34	0	2	2	36	35	68	6	0
АРПУ н	33	0	2	2	34	34	66	6	2
ФП1 ГШ	45	0	2	2	7	60	84	21	0
АКО п	1	0	2	2	49	2	2	13	1
РМДИ1 п	18	0	2	2	73	19	36	20	0
РМО1 з	14	0	2	2	70	15	29	19	1
ЦУУ2 з	5	0	2	2	58	6	11	15	3
К05М 21-24 н	26	1	2	2	20	27	52	2	0
кросс НС,Ц з	6	0	2	2	80	7	13	23	1
К05М 25-28 н	27	1	2	2	22	28	54	3	2
ЯШ096-1 ГШ з	7	0	2	2	82	8	15	23	3
К05М 21-24 в	26	1	2	2	19	27	53	2	1
ОКС ТОФМ п 	10	0	2	2	65	11	20	18	0
К05М 33-36 н	29	1	2	2	26	30	58	4	2
УПС3 з	9	0	2	2	64	10	19	17	3
К05М 1-4 н	21	1	2	2	9	22	42	0	2
ЗШКО в 	32	0	2	2	31	33	65	5	1
РМО2 п	15	0	2	2	71	16	30	19	2
KAPC CA 2 н	31	1	2	2	29	32	62	5	2
РМДИ1 з	18	0	2	2	74	19	37	20	1
кросс НС,Ц п	6	0	2	2	79	7	12	23	0
АКО з	1	0	2	2	50	2	3	13	1
ПА616 1	39	0	2	2	1	48	78	13	2
П616 з	0	0	2	2	48	1	1	13	0
ЦКО п	3	0	2	2	53	4	6	14	2
ЦУУ1 п	4	0	2	2	55	5	8	15	0
П616 п	0	0	2	2	47	1	0	13	0
УПС2 з	8	0	2	2	62	9	17	17	1
УПС3 п	9	0	2	2	63	10	18	17	2
СА508 ОКС БИ п	2	0	2	2	51	3	4	14	0
ЦУУ1 з	4	0	1	2	56	5	9	15	1
ЦУУ2 п	5	0	2	2	57	6	10	15	2
СА508 ОКС БИ з	2	0	2	2	52	3	5	14	1
РМО1 п	14	0	2	2	69	15	28	19	0
ПА616 2	40	0	2	2	2	48	79	13	3
кросс С п	12	0	2	2	77	13	24	21	0
ЯШ096-1 ГШ п	7	0	2	2	81	8	14	23	2
РМО3 п	16	6	1	2	-1	17	32	-1	-1
РМО3 з	16	6	1	2	-1	17	33	-1	-1
РМО4 п	17	6	1	2	-1	18	34	-1	-1
РМО4 з	17	6	1	2	-1	18	35	-1	-1
ЯШ136 Эл. пит. п	13	0	2	2	45	14	26	12	0
\.


--
-- Data for Name: num_as; Type: TABLE DATA; Schema: public; Owner: root
--

COPY num_as (as1) FROM stdin;
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
\.


--
-- Data for Name: out_chan; Type: TABLE DATA; Schema: public; Owner: root
--

COPY out_chan (ko, kreit, cell, chan, type, num, name, sost, vdt, vinf, line, grif, rmo, ot, otb, snx, nomer, n_sa_rpu, avar, nf_sl, in_out, hlp_sign) FROM stdin;
2	1	4	5	РК   	9	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	4	,
1	1	14	6	ПА   	14	РМДИ 2          	0	2013-11-07 15:21:12.35	                     	4	откр 	1	0	0	0	0	0	0	4	2	,
1	1	4	8	ПА   	12	РМДИ 1 С        	0	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
2	1	3	8	РК   	8	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
1	1	2	8	ПА   	4	Тихо            	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
2	1	6	5	РК   	17	пом507ЦМ2_1 0   	0	\N	                     	0	     	0	0	0	0	0	0	12	6	2	,
1	1	6	7	АТС2 	7	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	5	8	АТС2 	4	Хороший (фон?)  	12	\N	                     	2	закр 	0	0	0	0	0	0	0	1	2	,
1	1	5	6	АТС2 	2	Хороший         	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	7	8	АТС2 	12	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	6	6	АТС2 	6	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	7	6	АТС2 	10	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	7	7	АТС2 	11	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	6	8	АТС2 	8	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	7	5	АТС2 	9	                	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
2	1	6	6	РК   	18	пом507ЦМ2_2 0   	0	\N	                     	0	     	0	0	0	0	0	0	0	4	2	,
2	1	6	7	РК   	19	пом507ЦМ2_3 0   	0	\N	                     	0	     	0	0	0	0	0	0	0	4	4	,
2	1	7	6	РК   	22	 0              	0	\N	                     	0	     	0	0	0	0	0	0	12	8	2	,
2	1	7	7	РК   	23	 0              	0	\N	                     	0	закр 	0	0	0	0	1	0	12	8	4	,
2	1	7	8	РК   	24	 0              	0	\N	                     	0	закр 	0	0	0	0	1	0	12	8	4	,
1	1	5	7	АТС2 	3	Хороший (фон?)  	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	6	5	АТС2 	5	Сохр конф фон   	12	\N	                     	2	закр 	0	0	0	0	0	0	1	1	2	,
1	1	5	5	АТС2 	1	СКС 385-20      	0	\N	                     	2	закр 	0	0	0	0	0	0	0	1	4	,
2	1	10	5	РК   	25	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
1	1	11	7	РМО  	0	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	2	2	,
1	1	10	8	РМО  	0	                	12	\N	                     	0	откр 	0	0	0	0	0	0	0	2	2	,
1	1	11	6	РМО  	0	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	2	2	,
1	1	9	5	РМО  	0	                	3	\N	                     	4	откр 	0	0	0	0	0	0	129	2	1	,
1	1	9	6	РМО  	0	                	3	\N	                     	2	откр 	0	0	0	0	0	0	128	2	2	,
1	1	9	7	РМО  	0	                	11	\N	                     	2	откр 	0	0	0	0	0	0	128	2	2	,
1	1	9	8	РМО  	0	                	11	\N	                     	2	откр 	0	0	0	0	0	0	129	2	2	,
1	1	10	6	РМО  	0	                	12	\N	                     	0	откр 	0	0	0	0	0	0	0	2	2	,
1	1	11	8	РМО  	2	Кармацкая       	0	\N	                     	4	откр 	0	0	0	0	0	0	0	2	\N	,
2	1	10	6	РК   	26	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	4	,
1	1	10	7	РМО  	1	Рева            	0	\N	                     	0	откр 	0	0	0	0	0	0	0	2	1	,
2	1	10	7	РК   	27	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
2	1	10	8	РК   	28	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
2	1	11	5	РК   	29	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
2	1	11	8	РК   	32	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
2	1	12	5	РК   	33	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	4	4	,
2	1	12	6	РК   	34	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	4	2	,
2	1	12	7	РК   	35	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	4	2	,
1	1	8	7	АТС  	0	                	12	\N	                     	0	откр 	0	0	0	0	0	0	129	0	2	,
1	1	8	8	АТС  	0	                	12	\N	                     	0	откр 	0	0	0	0	0	0	129	0	2	,
2	1	12	8	РК   	36	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	4	2	,
1	1	4	7	ПА   	11	Роса            	0	2013-11-07 15:20:49.93	                     	4	закр 	1	2	0	0	0	0	0	4	4	,
2	1	2	6	РК   	2	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
1	1	3	7	ПА   	7	Односторонний   	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
1	1	11	5	ГИМ  	0	                	12	\N	                     	2	откр 	0	0	0	0	0	0	1	0	2	,
1	1	10	5	ГИМ  	0	                	12	\N	                     	0	откр 	0	0	0	0	0	0	1	0	2	,
2	1	2	7	РК   	3	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
1	1	14	8	ПА   	16	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	2	,
1	1	4	5	ПА   	9	Мертвый         	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	2	,
1	1	15	5	ПА   	17	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	4	,
1	1	2	7	ПА   	3	Хороший         	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
1	1	3	5	ПА   	5	Тихо            	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
1	1	3	8	ПА   	8	Хороший         	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
1	1	4	6	ПА   	10	Хороший         	12	\N	                     	4	закр 	0	0	0	0	0	0	0	4	1	,
2	1	14	6	ПК   	6	6 ПК            	0	\N	                     	0	     	0	0	0	1	1	26	0	11	1	,
2	1	15	8	ПК   	12	12 ПК           	0	\N	                     	0	     	0	0	0	1	1	37	0	11	1	,
2	1	13	8	ПК   	4	4 ПК            	0	\N	                     	0	     	0	0	0	1	1	12	0	11	1	,
1	1	15	6	ПА   	18	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	4	,
2	1	2	8	РК   	4	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	4	,
1	1	12	6	УАТС 	14	                	12	\N	                     	2	откр 	0	0	0	0	0	0	1	1	2	,
1	1	12	7	УАТС 	15	                	12	\N	                     	2	откр 	0	0	0	0	0	0	1	1	2	,
1	1	12	8	УАТС 	16	                	12	\N	                     	2	откр 	0	0	0	0	0	0	1	1	2	,
1	1	12	5	УАТС 	13	ВНС 44-28       	0	\N	                     	2	откр 	0	0	0	0	0	0	0	1	2	,
1	1	15	7	ПА   	19	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	4	,
1	1	15	8	ПА   	20	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	1	,
1	1	14	5	ПА   	13	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	1	,
1	1	14	7	ПА   	15	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	4	4	,
1	1	3	6	ПА   	6	Нач смены       	0	\N	                     	4	закр 	0	0	0	0	0	0	0	4	4	,
1	1	2	5	ПА   	1	СК сл9          	0	\N	                     	4	закр 	0	0	0	0	0	0	0	4	2	,
1	1	2	6	ПА   	2	СК сл8          	0	\N	                     	4	закр 	0	0	0	0	0	0	0	4	2	,
2	1	3	5	РК   	5	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
2	1	3	6	РК   	6	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	4	,
2	1	5	8	РК   	16	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	8	4	,
2	1	1	5	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
2	1	1	6	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
2	1	1	7	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
2	1	1	8	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
2	1	9	5	     	0	                	99	\N	                     	0	закр 	0	0	0	0	0	0	128	0	4	,
2	1	9	6	     	0	                	99	\N	                     	0	закр 	0	0	0	0	0	0	128	0	4	,
2	1	9	7	     	0	                	99	\N	                     	0	закр 	0	0	0	0	0	0	128	0	4	,
2	1	9	8	     	0	                	99	\N	                     	0	закр 	0	0	0	0	0	0	128	0	2	,
2	1	8	5	ПК   	0	19              	12	\N	                     	0	С    	0	0	0	0	0	0	128	11	1	,
1	1	13	5	ГАТС 	17	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	0	2	,
1	1	13	6	ГАТС 	18	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	0	2	,
1	1	13	7	ГАТС 	19	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	0	2	,
1	1	13	8	ГАТС 	20	                	12	\N	                     	2	откр 	0	0	0	0	0	0	0	0	2	,
2	1	8	6	ПК   	0	ПК20            	12	\N	                     	0	С    	0	0	0	0	0	0	128	11	1	,
2	1	8	7	ПК   	0	ПК21            	12	\N	                     	0	     	0	0	0	0	0	0	128	11	1	,
2	1	8	8	ПК   	0	ПК22            	12	\N	                     	0	     	0	0	0	0	0	0	128	11	1	,
2	1	3	7	РК   	7	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
1	1	1	5	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
1	1	1	6	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
1	1	1	7	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
1	1	1	8	\N	0	\N	12	\N	                     	0	\N	0	0	0	0	0	0	128	0	\N	,
1	1	8	5	АТС  	0	                	12	\N	                     	2	откр 	0	0	0	0	0	0	129	0	4	,
1	1	8	6	АТС  	0	                	12	\N	                     	2	откр 	0	0	0	0	0	0	128	0	2	,
2	1	6	8	РК   	20	Сочи 1 0        	0	\N	                     	0	     	0	0	0	0	0	0	0	6	2	,
2	1	7	5	РК   	21	 0              	0	\N	                     	0	     	0	0	0	0	0	0	12	8	4	,
2	1	4	7	РК   	11	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	4	,
2	1	4	8	РК   	12	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
2	1	5	5	РК   	13	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	8	2	,
2	1	5	6	РК   	14	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	8	4	,
2	1	5	7	РК   	15	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	8	2	,
2	1	2	5	РК   	1	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
2	1	4	6	РК   	10	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	12	2	,
2	1	11	6	РК   	30	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	2	,
2	1	11	7	РК   	31	 0              	0	\N	                     	0	     	0	0	0	0	0	0	0	3	4	,
2	1	14	8	ПК   	8	8 ПК            	0	\N	                     	0	     	0	0	0	1	1	25	0	11	1	,
2	1	15	7	ПК   	11	11 ПК Кедр      	3	2013-10-31 09:38:13.69	                     	0	     	0	0	0	1	1	33	0	11	1	,
2	1	13	6	ПК   	2	2 ПК            	0	\N	                     	0	     	0	0	0	1	1	11	0	11	1	,
2	1	14	7	ПК   	7	7 ПК            	0	\N	                     	0	     	0	0	0	1	1	8	0	11	1	,
2	1	13	5	ПК   	1	1 ПК            	0	\N	                     	0	     	0	0	0	1	1	3	0	11	1	,
2	1	13	7	ПК   	3	3 ПК            	0	\N	                     	0	     	0	0	0	1	1	4	0	11	1	,
2	1	14	5	ПК   	5	5 ПК            	0	\N	                     	0	     	0	0	0	1	1	7	0	11	1	,
2	1	15	6	ПК   	10	10 ПК           	0	\N	                     	0	     	0	0	0	1	1	39	0	11	1	,
2	1	15	5	ПК   	9	9 ПК            	0	\N	                     	0	     	0	0	0	1	1	34	0	11	1	,
\.


--
-- Data for Name: pk; Type: TABLE DATA; Schema: public; Owner: root
--

COPY pk (num, am, kzn, kl, lsmena, psh, gr, zapret) FROM stdin;
11	0	3	0	0	0	3	0
4	0	2	0	0	0	2	0
2	0	2	0	0	0	2	0
1	0	1	0	0	0	1	0
3	0	1	0	0	0	1	0
5	0	1	0	0	0	1	0
6	0	2	0	0	0	2	0
7	0	1	0	0	0	1	0
8	0	2	0	0	0	2	0
12	0	4	0	0	0	4	0
9	0	3	0	0	0	3	0
10	0	4	0	0	0	4	0
\.


--
-- Data for Name: proba; Type: TABLE DATA; Schema: public; Owner: root
--

COPY proba (pr) FROM stdin;
\.


--
-- Data for Name: results; Type: TABLE DATA; Schema: public; Owner: root
--

COPY results (msg) FROM stdin;
2013-01-10 14:47:02.170522+03 при отб ch=4679 1247 не выбран СА 
\.


--
-- Data for Name: rk; Type: TABLE DATA; Schema: public; Owner: root
--

COPY rk (num, kind, napr, mar, net, crs, freq, kzn, kl, lsmena, fnum, psh, gr, zapret, vrc, fvkk, nvrc, avrc, zpiv, mar_rc, sost_rc, fnum_rc, rm_vrc, mar_send, sost_send, fnum_send, soi, hlp_sign, sel_mar) FROM stdin;
32	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	4	0	0	0	35	,	0
33	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	9	0	1	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
34	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	11	0	2	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
35	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
36	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	0	0	0	0	0	7	0	0	0	35	,	0
17	К4 	пом507ЦМ2_1  	СМ1 	     	ДЕЖ   	                                                                                                                                                                                                                                                                                                            	1	0	0	9	0	1	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
18	К4 	пом507ЦМ2_2  	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	11	0	2	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
19	К4 	пом507ЦМ2_3  	СМ1 	     	ДЕЖ   	                                                                                                                                                                                                                                                                                                            	1	0	0	1	0	1	0	12	0	0	12	0	0	0	0	7	0	0	0	35	,	0
20	К4 	Сочи 1       	СМ1 	     	ДЕЖ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
21	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	0	0	0	0	0	2	0	0	0	35	,	0
22	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
23	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
24	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
25	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	3	0	0	0	35	,	0
26	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	3	0	0	0	35	,	0
27	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	4	0	0	0	35	,	0
28	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	4	0	0	0	35	,	0
29	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	3	0	0	0	35	,	0
2	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
3	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
4	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
5	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
6	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
7	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	9	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
8	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	11	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
9	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
11	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
12	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
13	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	9	0	2	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
14	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	11	0	1	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
15	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
16	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	2	0	0	0	35	,	0
1	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	8	0	2	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
10	К4 	             	СМ1 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	8	0	1	0	12	0	0	12	0	0	0	0	1	0	0	0	35	,	0
30	К4 	             	СМ2 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	2	0	0	3	0	2	0	12	0	0	12	0	0	0	0	3	0	0	0	35	,	0
31	К4 	             	СМ2 	     	ИЗЛ   	                                                                                                                                                                                                                                                                                                            	1	0	0	3	0	1	0	12	0	0	12	0	0	0	0	4	0	0	0	35	,	0
\.


--
-- Data for Name: rmdi_svaz; Type: TABLE DATA; Schema: public; Owner: root
--

COPY rmdi_svaz (num, treg) FROM stdin;
7	5248
8	10973
\.


--
-- Data for Name: rmo_config; Type: TABLE DATA; Schema: public; Owner: root
--

COPY rmo_config (rmo1, rmo2, rmo3, rmo4) FROM stdin;
1	1	0	0
\.


--
-- Data for Name: rmo_stat; Type: TABLE DATA; Schema: public; Owner: root
--

COPY rmo_stat (dt, rmo, kod) FROM stdin;
2011-12-08 13:59:43.036461	2	88
2013-10-24 08:24:33.650272	2	88
\.


--
-- Data for Name: sa_rpu; Type: TABLE DATA; Schema: public; Owner: root
--

COPY sa_rpu (num, kod, kreit1, cell1, chan1, kreit2, cell2, chan2, kreit3, cell3, chan3, kzn, lsmena, god, konf, kl, psh, gr, dkl, blk, blk_i, busy) FROM stdin;
34	30	1	12	2	1	12	2	1	12	2	3	0	0	1	2	0	3	2	1	0	1
35	30	1	12	3	1	12	3	1	12	3	3	0	0	1	2	0	3	2	1	0	0
41	40	1	14	1	1	14	1	1	0	1	1	0	1	1	0	0	1	1	1	0	0
1	30	1	2	1	1	2	1	1	2	1	1	0	0	1	1	0	1	1	1	0	0
2	30	1	2	2	1	2	2	1	2	2	1	0	0	0	1	0	1	1	1	0	0
3	30	1	2	3	1	2	3	1	2	3	1	0	0	1	1	0	1	1	1	0	1
4	30	1	2	4	1	2	4	1	2	4	1	0	0	1	1	0	1	1	1	0	1
5	30	1	3	1	1	3	1	1	3	1	1	0	0	0	1	0	1	1	1	0	0
6	30	1	3	2	1	3	2	1	3	2	1	0	0	1	1	0	1	1	1	0	0
7	30	1	3	3	1	3	3	1	3	3	1	0	0	1	1	0	1	1	1	0	1
8	30	1	3	4	1	3	4	1	3	4	1	0	0	1	1	0	1	1	1	0	1
9	30	1	4	1	1	4	1	1	4	1	2	0	0	1	1	0	2	1	1	0	0
10	30	1	4	2	1	4	2	1	4	2	2	0	0	1	1	0	2	1	1	0	0
11	30	1	4	3	1	4	3	1	4	3	2	0	0	1	1	0	2	1	1	0	1
12	30	1	4	4	1	4	4	1	4	4	2	0	0	1	1	0	2	1	1	0	1
13	30	1	5	1	1	5	1	1	5	1	2	0	0	1	1	0	2	1	1	0	0
14	30	1	5	2	1	5	2	1	5	2	2	0	0	1	1	0	2	1	1	0	0
36	30	1	12	4	1	12	4	1	12	4	3	0	0	1	2	0	3	2	1	0	0
15	30	1	5	3	1	5	3	1	5	3	2	0	0	1	1	0	2	1	1	0	0
37	30	1	13	1	1	13	1	1	13	1	4	0	0	1	1	0	4	2	1	0	1
38	30	1	13	2	1	13	2	1	13	2	4	0	0	1	1	0	4	2	1	0	0
39	30	1	13	3	1	13	3	1	13	3	4	0	0	1	1	0	4	2	1	0	1
40	30	1	13	4	1	13	4	1	13	4	4	0	0	0	2	0	4	2	1	0	0
42	40	1	14	2	1	14	2	1	0	1	2	0	1	1	0	1	1	1	1	0	0
43	40	1	14	3	1	14	3	1	0	1	3	0	1	1	0	0	3	1	1	0	0
44	40	1	14	4	1	14	4	1	0	1	4	0	1	1	0	0	4	1	1	0	0
45	40	1	15	1	1	15	1	1	0	1	1	0	1	1	0	0	1	1	1	0	0
46	40	1	15	2	1	15	2	1	0	1	2	0	1	1	0	0	2	2	1	0	0
47	40	1	15	3	1	15	3	1	0	4	3	0	1	1	0	0	3	2	1	0	0
16	30	1	5	4	1	5	4	1	5	4	2	0	0	0	1	0	2	1	1	0	0
17	30	1	6	1	1	6	1	1	6	1	2	0	0	0	1	0	1	1	1	0	0
18	30	1	6	2	1	6	2	1	6	2	2	0	0	0	1	0	1	1	1	0	0
19	30	1	6	3	1	6	3	1	6	3	2	0	0	0	1	0	1	1	1	0	0
20	30	1	6	4	1	6	4	1	6	4	2	0	0	0	1	0	1	1	1	0	0
21	30	1	7	1	1	7	1	1	7	1	2	0	0	0	1	0	1	1	1	0	0
22	30	1	7	2	1	7	2	1	7	2	2	0	0	0	1	0	1	1	1	0	0
48	40	1	15	4	1	15	4	1	0	4	4	0	1	1	0	0	4	1	1	0	0
23	30	1	7	3	1	7	3	1	7	3	2	0	0	0	1	0	1	1	1	0	0
24	30	1	7	4	1	7	4	1	7	4	2	0	0	0	1	0	1	1	1	0	0
25	30	1	10	1	1	10	1	1	10	1	2	0	0	1	1	0	2	1	1	0	1
26	30	1	10	2	1	10	2	1	10	2	2	0	0	1	1	0	2	1	1	0	1
27	30	1	10	3	1	10	3	1	10	3	2	0	0	1	1	0	1	1	1	0	0
28	30	1	10	4	1	10	4	1	10	4	2	0	0	0	1	0	1	1	1	0	0
29	30	1	11	1	1	11	1	1	11	1	2	0	0	0	1	0	1	1	1	0	0
30	30	1	11	2	1	11	2	1	11	2	2	0	0	0	1	0	1	1	1	0	0
31	30	1	11	3	1	11	3	1	11	3	2	0	0	0	1	0	1	1	1	0	0
32	30	1	11	4	1	11	4	1	11	4	2	0	0	0	1	0	1	1	1	0	0
33	30	1	12	1	1	12	1	1	12	1	3	0	0	1	2	0	3	2	1	0	1
\.


--
-- Data for Name: sig_rmo; Type: TABLE DATA; Schema: public; Owner: root
--

COPY sig_rmo (dt, ch, kod) FROM stdin;
2013-10-29 13:00:49.990088	6	80
2015-07-21 11:11:49.451041	39	81
\.


--
-- Data for Name: smena; Type: TABLE DATA; Schema: public; Owner: root
--

COPY smena (dt, leader, eng1, eng2, tel1, tel2, tel3, tel4, eng_rmish, hlp_sign) FROM stdin;
\.


--
-- Data for Name: soed; Type: TABLE DATA; Schema: public; Owner: root
--

COPY soed (dt_order, dt_beg, dt_end, ch1, type1, num1, nmbr1, tsvaz1, fnum1, ch2, type2, num2, nmbr2, tsvaz2, fnum2, rmo, avar, sl, name_rmo) FROM stdin;
\.


--
-- Data for Name: sost_cells; Type: TABLE DATA; Schema: public; Owner: root
--

COPY sost_cells (ko, kreit, cell, adr, spuu_o, spuu_r, sost, smoi, type, regim, kod, new_type, new_regim, old_type, in_use) FROM stdin;
1	1	13	4816	1	1	0	4	2	1	9	2	1	2	1
2	1	10	8864	1	1	0	0	4	2	9	4	2	4	1
2	1	6	8800	1	1	0	0	4	2	9	4	2	4	1
2	1	4	8768	1	1	0	0	4	2	9	4	2	4	1
2	1	7	8816	1	1	0	0	4	2	9	4	2	4	1
2	1	12	8896	1	1	0	4	4	2	9	4	2	4	1
2	1	11	8880	1	1	0	0	4	2	9	4	2	4	1
2	1	3	8752	1	1	0	0	4	2	9	4	2	4	1
2	1	5	8784	1	1	0	0	4	2	9	4	2	4	1
2	1	14	8928	1	1	0	4	4	1	9	4	1	4	1
2	1	2	8736	1	1	0	0	4	2	9	4	2	4	1
2	1	15	8944	1	1	0	0	4	1	9	4	1	4	1
2	1	13	8912	1	1	0	0	4	1	9	4	1	4	1
2	1	9	8848	0	0	1	0	5	11	9	5	11	5	1
2	1	8	8832	0	0	0	4	5	1	9	5	1	5	1
3	1	3	12848	1	1	0	0	15	0	9	15	0	0	1
3	1	7	12912	1	1	0	0	15	3	9	15	3	15	1
3	1	10	12960	1	1	0	0	15	3	9	15	3	15	1
3	1	4	12864	1	1	0	0	15	3	9	15	3	15	1
3	1	13	13008	1	1	0	0	15	3	9	15	3	15	1
3	1	5	12880	1	1	0	0	15	3	9	15	3	15	1
3	1	6	12896	1	1	0	0	15	3	9	15	3	15	1
3	1	11	12976	1	1	0	0	15	3	9	15	3	15	1
3	1	12	12992	1	1	0	0	15	3	9	15	3	15	1
3	1	2	12832	1	1	0	0	15	0	9	15	0	0	1
3	1	8	12928	0	0	0	0	5	3	9	5	3	5	1
3	1	14	13024	0	0	1	0	15	3	11	15	3	15	1
3	1	9	12944	0	0	0	0	5	3	9	5	3	5	1
3	1	15	13040	0	0	1	0	15	3	11	15	3	15	1
3	1	1	12816	0	0	0	0	0	0	0	0	0	0	0
2	1	1	8720	0	0	0	0	0	0	0	0	0	0	0
1	1	10	4768	1	1	0	0	3	13	9	3	15	3	1
1	1	6	4704	1	1	0	0	2	2	9	2	1	2	1
1	1	3	4656	1	1	0	0	1	14	9	1	13	1	1
1	1	11	4784	1	1	0	0	3	13	9	3	1	3	1
1	1	4	4672	1	1	0	0	1	14	9	1	2	1	1
1	1	7	4720	1	1	0	0	2	2	9	2	2	2	1
1	1	15	4848	1	1	0	0	1	13	9	1	14	1	1
1	1	14	4832	1	1	0	0	1	5	9	1	1	1	1
1	1	2	4640	1	1	0	0	1	14	9	1	14	1	1
1	1	5	4688	1	1	0	0	2	2	9	2	5	2	1
1	1	12	4800	1	1	0	0	2	1	9	2	1	2	1
1	1	8	4736	0	0	1	0	5	0	9	5	0	5	1
1	1	1	4624	0	0	0	0	0	0	0	0	0	0	0
1	1	9	4752	0	0	1	0	5	13	9	5	15	5	1
\.


--
-- Data for Name: sost_sa_rpu; Type: TABLE DATA; Schema: public; Owner: root
--

COPY sost_sa_rpu (num, from_a, to_a, nport, port, factory_number, keyzone, ki, vs, sendbuf, dt_key) FROM stdin;
13	0	145	2	5	001096              	0	1	0	145	2012-10-11 16:59:19.588579
14	0	145	2	6	001094              	5	0	0	145	2012-10-11 16:59:20.072534
15	0	145	2	7	001098              	5	0	0	145	2012-10-11 16:59:20.504544
16	0	145	2	8	001097              	5	0	0	145	2013-08-06 16:18:03.256825
17	0	145	2	9	001112              	5	0	1	145	2012-10-11 17:04:48.975096
18	0	145	2	10	123354              	5	0	0	145	2013-08-06 16:18:50.780071
19	0	145	2	11	001111              	5	0	0	145	2012-10-11 16:49:02.258946
20	0	145	2	12	001105              	5	0	0	145	2012-10-11 16:35:56.436707
21	0	145	3	1	001107              	26	0	0	145	2012-11-27 21:38:26.285458
22	0	145	3	2	001071              	5	0	0	145	2012-10-11 16:53:13.487512
23	0	145	3	3	001088              	5	0	0	145	2012-10-11 16:53:13.925394
24	0	145	3	4	001089              	5	0	0	145	2012-10-11 17:03:15.383876
25	0	145	3	5	001101              	5	0	0	145	2012-10-31 15:22:58.819301
26	0	145	3	6	fbdfgdfg            	5	0	0	145	2012-10-11 16:56:12.119699
27	0	145	3	7	7643                	5	0	0	145	2012-10-11 16:57:21.199717
28	0	145	3	8	dfdsfsdfdf          	5	0	0	145	2012-10-11 16:57:56.035323
29	0	145	3	9	11111111            	5	0	0	145	2012-10-11 16:59:27.397408
30	0	145	3	10	hggfjfhj            	8	0	0	145	2012-10-11 16:59:27.830376
31	0	145	3	11	4444                	5	0	0	145	2012-10-11 16:59:18.077643
32	0	145	3	12	                    	5	0	0	145	2012-10-11 16:59:23.605497
33	0	161	4	1	45443333            	5	0	0	161	2012-10-11 17:01:05.120931
34	0	161	4	2	                    	5	0	0	161	2012-10-11 16:34:50.719215
35	0	161	4	3	                    	5	0	0	161	2012-10-11 16:34:51.181197
36	0	161	4	4	                    	5	0	0	161	2012-10-11 16:34:47.801388
37	0	145	4	5	                    	5	0	0	145	2012-10-11 16:53:07.271689
38	0	145	4	6	                    	5	0	0	145	2012-10-11 16:53:11.058539
39	0	145	4	7	                    	5	0	0	145	2013-09-21 03:29:18.74634
40	0	161	4	8	                    	5	0	0	161	2012-10-11 16:53:11.935506
42	37648	7	2	0	                    	\N	0	0	2	\N
43	37648	7	3	0	                    	\N	0	0	2	\N
44	37648	7	4	0	                    	\N	0	0	2	\N
45	37648	7	5	0	                    	0	0	0	2	\N
46	37648	7	6	0	                    	\N	0	0	2	\N
1	0	145	1	1	001086              	1	0	0	145	2012-10-11 16:56:50.744188
2	0	145	1	2	000334              	5	0	0	145	2012-11-22 15:45:45.286604
3	0	145	1	3	001089              	21	1	0	145	2012-10-11 16:56:29.814658
4	0	145	1	4	001014              	\N	0	1	145	2012-10-11 16:48:47.451528
5	0	145	1	5	001115              	\N	1	0	145	2012-10-12 11:05:53.672671
47	37648	7	7	0	                    	\N	0	0	2	\N
48	37648	7	8	0	                    	\N	0	0	2	\N
6	0	145	1	6	001081              	\N	0	0	145	2012-10-11 16:53:12.164487
7	0	145	1	7	001103              	\N	0	0	145	2012-10-11 16:53:12.858631
8	0	145	1	8	001093              	\N	0	0	145	\N
9	0	145	2	1	001109              	\N	0	0	145	2012-10-11 16:56:10.800856
41	37648	7	1	0	                    	\N	0	0	2	\N
10	0	145	2	2	001110              	\N	0	0	145	2012-10-11 16:56:21.332417
11	0	145	2	3	001114              	\N	0	0	145	2012-10-11 16:56:16.66559
12	0	145	2	4	001106              	\N	0	0	145	2012-10-11 16:56:07.038998
\.


--
-- Data for Name: svaz; Type: TABLE DATA; Schema: public; Owner: root
--

COPY svaz (num, name, ip, net, p1, p2, sp1, sp2, index_id) FROM stdin;
21	ПУУ1 стойки АКО	192.168.1.21	1	1	0	\N	\N	19
6	РМО4	192.168.1.6	0	1	0	\N	\N	6
17	ПС стойки УПС1	192.168.1.17	1	1	0	\N	\N	17
26	КЛС1 стойки ЦУУ	192.168.1.26	1	1	0	\N	\N	24
20	ПУУ2 стойки АКО	192.168.1.20	1	1	0	\N	\N	18
5	РМО3	192.168.1.5	0	1	0	\N	\N	5
27	КЛС2 стойки ЦУУ	192.168.1.27	1	1	0	\N	\N	25
22	ПУУ2 стойки ЦКО	192.168.1.22	1	1	0	\N	\N	20
23	ПУУ1 стойки ЦКО	192.168.1.23	1	1	0	\N	\N	21
8	РМДИ2	192.168.1.8	1	1	0	\N	\N	8
9	РМИШ	192.168.1.9	0	1	0	\N	\N	9
1	ЦУУ сервер 1	192.168.1.101	1	1	0	\N	\N	1
7	РМДИ1	192.168.1.7	1	1	0	\N	\N	7
15	ПС стойки РМИШ	192.168.1.15	1	1	0	\N	\N	15
4	РМО2	192.168.1.4	1	1	0	\N	\N	4
30	ЦУУ1 с1	\N	1	\N	\N	\N	\N	28
31	ЦУУ1 с2	\N	1	\N	\N	\N	\N	29
32	ЦУУ2 с1	\N	1	\N	\N	\N	\N	30
33	ЦУУ2 с2	\N	1	\N	\N	\N	\N	31
3	РМО1	192.168.1.3	1	1	0	\N	\N	3
2	ЦУУ сервер 2	192.168.1.102	1	1	0	\N	\N	2
24	ПУУ1 стойки ЗШКО	192.168.1.24	1	1	0	\N	\N	22
25	ПУУ2 стойки ЗШКО	192.168.1.25	1	1	0	\N	\N	23
28	КЛС1 стойки АРПУ	192.168.1.28	1	1	0	\N	\N	26
29	КЛС2 стойки АРПУ	192.168.1.29	1	1	0	\N	\N	27
14	ПС стойки ГШ	192.168.1.14	1	1	0	\N	\N	14
16	ПС стойки УПС2	192.168.1.16	1	1	0	\N	\N	16
10	ПС1 стойки АРПУ	192.168.1.10	0	0	1	2      	\N	10
11	ПС2 стойки АРПУ	192.168.1.11	0	0	1	2      	\N	11
12	ПС3 стойки АРПУ	192.168.1.12	0	0	1	2      	\N	12
13	ПС4 стойки АРПУ	192.168.1.13	0	0	1	2      	\N	13
\.


--
-- Data for Name: t_loglist; Type: TABLE DATA; Schema: public; Owner: root
--

COPY t_loglist (date_time, rmdisign, ko, kreit, cell, chan, event, action, eng_name) FROM stdin;
\.


--
-- Data for Name: tab_app; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tab_app (kod, name) FROM stdin;
10	Аргунь          
20	Дельта          
30	Кулон           
40	Сердолик        
\.


--
-- Data for Name: tab_kzn; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tab_kzn (num, info) FROM stdin;
48	sgsdfsdsdf                                                                                          
25	                                                                                                    
26	                                                                                                    
27	7642                                                                                                
28	                                                                                                    
29	                                                                                                    
30	                                                                                                    
31	                                                                                                    
32	                                                                                                    
33	                                                                                                    
34	                                                                                                    
35	                                                                                                    
36	                                                                                                    
37	                                                                                                    
38	                                                                                                    
39	                                                                                                    
40	                                                                                                    
1	АРПУ                                                                                                
2	Сочи (осн)                                                                                          
3	008                                                                                                 
4	014                                                                                                 
5	CУС                                                                                                 
6	ВУС                                                                                                 
7	Зона 7                                                                                              
8	Сочи (доп)                                                                                          
9	Зона 9                                                                                              
10	Зона 10                                                                                             
11	Зона 11                                                                                             
12	Зона 12                                                                                             
13	fuck fuck fuck                                                                                      
14	xcxcvcvx                                                                                            
15	Сочи 15                                                                                             
16	                                                                                                    
17	                                                                                                    
41	                                                                                                    
42	                                                                                                    
43	                                                                                                    
44	                                                                                                    
45	                                                                                                    
46	                                                                                                    
47	                                                                                                    
18	                                                                                                    
19	                                                                                                    
20	                                                                                                    
21	                                                                                                    
22	                                                                                                    
23	                                                                                                    
24	                                                                                                    
\.


--
-- Data for Name: tab_regl; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tab_regl (kod, soob, menu_sign) FROM stdin;
19	ВЫКЛ РЕГЛ БОНС 	1
201	КПВ-А          	0
13	ИВ-Ц           	0
18	СЗКА-1         	0
21	СЗКА-2         	0
22	СЗКА-0         	0
24	СЗКА-Н         	0
25	СОА            	0
206	СОА-Н          	0
48	ВЧ КК          	1
49	ПАРАМ БОНС     	1
207	ВЧ  АПЗК       	0
68	ВКЛ ОСН        	1
42	ПДТ КМ         	0
34	СОИ            	0
35	СНИ            	0
72	АВ БУ          	0
43	Норма          	0
244	АВ ВД          	0
245	АВ ПЖ          	0
62	ПРЗ БУ КК      	0
75	ЗПР ПАР БОНС   	1
57	ПДТ КМ РТ_Н    	0
80	ПРЗ БУ РТ_Н    	0
52	АВ ПРД РТ_Н    	0
53	АВ ПРМ РТ_Н    	0
54	СОИ РТ_Н       	0
55	АВ АФУ РТ_Н    	0
50	АВ СЛ РТ_Н     	0
56	АВ ФП РТ_Н     	0
63	ПДТ КМ РТ_Л    	0
44	АВ ВД КК       	0
45	АВ ПЖ КК       	0
20	АВ БП КК       	0
8	АВ КРК КК      	0
9	АВ КОМ КК      	0
90	НСД РТ_Н       	0
266	ВКЛ РР КП      	0
269	ПДТ КМ КП      	0
73	СЗКА-АВТ       	0
101	Включить регл  	0
100	Выключить регл 	0
3	М3-1           	1
4	М3-2           	1
5	СМ3-1          	1
6	СМ3-2          	1
2	СЗ-А           	1
7	ВЧ АПЗК        	1
1	КПВ-А          	1
11	ИВ             	1
12	ИВ-К           	1
14	КПВ            	1
23	ВКЛ  АПЗК      	1
33	ЗПР            	1
32	 ПДТ           	1
46	ВКЛ РТ_Н       	1
47	ВЫКЛ РТ_Н      	1
51	ПДТ С РТ_Н     	1
58	ВКЛ РТ_Л       	1
59	ВЫКЛ РТ_Л      	1
60	ВКЛ ШРТ_Л      	1
65	ВКЛ  ПРГ  ПРМ  	1
66	ВКЛ  ПРГ  ПРД  	1
74	СВН            	1
76	ЗПР РЕЖ        	1
67	ВП КК          	1
70	 ПДТ ПРЗ КК    	1
79	ПДТ ПРЗ РТ_Н   	1
81	СН-1           	1
82	СН-2           	1
83	СН-3           	1
84	СН-4           	1
85	СН-5           	1
86	СН-6           	1
87	СН-7           	1
91	М1-1           	1
92	М1-2           	1
93	М2-1           	1
94	М2-2           	1
95	СМ1-1          	1
96	СМ1-2          	1
97	СМ2-1          	1
98	СМ2-2          	1
99	КД             	1
17	СОЦ            	1
0	СИНХР Р        	0
27	ВКЛ  ПРД       	1
28	ВКЛ  ДЕЖ       	1
29	ВКЛ  Ш         	1
30	АВ ПДТ         	0
37	АВ ПРД         	0
38	АВ ПРМ         	0
39	АВ АФУ         	0
40	АВ СЛ          	0
41	АВ ФП          	0
64	ПД Т ПРЗ       	1
71	НСД            	0
89	ПРЗ БУ         	0
88	СОН            	1
69	ВКЛ РЕГЛ КК    	1
77	РЕЖ            	1
10	ВКЛ ПИТ        	1
15	ВЫКЛ ПИТ       	1
\.


--
-- Data for Name: tab_regl_k4; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tab_regl_k4 (kod, soob, k4, kdg, nac, type, menu_sign) FROM stdin;
0	СНХ            	00000 	0	0000 	10	1
11	ИВ             	0     	0	     	10	1
14	КПВ            	9     	9	     	10	1
17	СОЦ            	70000 	7	0000 	10	1
18	СЗКА           	9     	9	     	13	1
22	СЗК0           	2     	2	     	13	1
24	СЗКН           	7     	7	     	13	1
25	СОА            	1     	1	     	13	1
27	ПДТ ВКЛ  ПРД   	80111 	8	0111 	13	1
28	ПДТ ВЫКЛ ПРД   	80112 	8	0112 	13	1
29	ВКЛ  Ш1        	80115 	8	0115 	10	1
29	ПДТ ВКЛ  Ш1    	80115 	8	0115 	13	1
33	ЗПР С          	80113 	8	0113 	10	1
34	СОИ            	80009 	8	0009 	13	1
35	СНИ            	80008 	8	0008 	13	1
37	АВ ПРД         	80126 	8	0126 	13	1
38	АВ ПРМ         	80127 	8	0127 	13	1
39	АВ АФУ         	80123 	8	0123 	13	1
41	АВ ФП          	80124 	8	0124 	13	1
43	Норма          	80113 	8	0113 	13	1
45	ПЖ             	80121 	8	0121 	13	1
60	ВКЛ  Ш2        	80116 	8	0116 	10	1
60	ПДТ ВКЛ  Ш2    	80116 	8	0116 	13	1
68	ВКЛ Р ПРД      	80000 	8	0000 	10	1
71	НСД            	80122 	8	0122 	13	1
76	ЗПР РЕЖ        	80300 	8	0300 	10	1
77	РЕЖ 0          	80300 	8	0300 	13	1
77	РЕЖ 1          	80300 	8	1300 	13	1
77	РЕЖ 2          	80300 	8	2300 	13	1
77	РЕЖ 3          	80300 	8	3300 	13	1
77	РЕЖ 4          	80300 	8	4300 	13	1
77	РЕЖ 5          	80300 	8	5300 	13	1
77	РЕЖ 6          	80300 	8	6300 	13	1
77	РЕЖ 7          	80300 	8	7300 	13	1
77	РЕЖ 8          	80300 	8	8300 	13	1
77	РЕЖ 9          	80300 	8	9300 	13	1
91	М1             	60000 	6	0000 	10	1
94	М2             	40000 	4	0000 	10	1
95	СМ1            	50000 	5	0000 	10	1
98	СМ2            	10000 	1	0000 	10	1
99	КД             	30000 	3	0000 	10	1
27	ВКЛ ПРД РЦ     	80111 	8	0111 	10	1
66	ВКЛ ПРГ ПРД    	86000 	8	6000 	10	1
65	ВКЛ ПРГ ПРМ    	80311 	8	0311 	10	1
28	ВЫКЛ ПРД РЦ    	80112 	8	0112 	10	1
115	ВКЛ ПИТ        	80119 	8	0119 	10	1
40	ПДТ  ВКЛ ПИТ   	80119 	8	0119 	13	1
0	СНХ            	00000 	0	0000 	13	0
113	ИВЦ            	0     	113	     	0	0
42	ПДТ ВКЛ ПРМ    	80311 	8	0311 	13	1
91	М1             	60000 	6	0000 	13	0
94	М2             	40000 	4	0000 	13	0
95	СМ1            	50000 	5	0000 	13	0
98	СМ2            	10000 	1	0000 	13	0
99	КД             	30000 	3	0000 	13	0
101	Включить  регл 	80991 	8	0991 	10	1
117	ПДТ ВЫКЛ ПИТ   	80120 	8	0120 	13	1
119	ПДТ ВКЛ О ПРД  	8000  	8	0000 	13	1
120	ВКЛ ПРМ        	80311 	8	0311 	10	1
100	Выключить регл 	80990 	8	0990 	13	1
122	ПДТ ВЫКЛ РЕГЛ  	80990 	8	0990 	13	1
123	ВЧ КК          	89900 	8	9900 	10	1
124	ПДТ ВЧ КК      	89900 	8	9900 	13	1
125	ПРЗ БУ КК      	66555 	6	6555 	10	1
126	ПДТ ПРЗ (ВЦ КК)	80999 	8	0999 	13	1
127	ЗПР П БОНС     	80555 	8	0555 	10	1
116	\N	\N	\N	\N	\N	1
118	ВКЛ О ПРД      	80000 	8	0000 	10	1
121	ПДТ ВКЛ РЕГЛ   	80991 	8	0991 	13	1
128	ПАРАМ БОНС     	8     	8	     	13	1
\.


--
-- Data for Name: tab_soob; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tab_soob (kod, soob) FROM stdin;
1	Входящий вызов                
3	Ответ АБ                      
5	Отбой АБ                      
7	Авария                        
2	Исходящий вызов               
4	Ответ станции                 
6	Отбой станции                 
8	Набор номера                  
10	Установить соединение         
17	ИВК                           
32	АБ ГИМ занят                  
19	Длительный вызов              
22	Громкий тон ПА                
23	Отключить микрофон            
24	Включить микрофон             
25	ПИВ                           
47	Ответ на ИВК                  
12	Удержание                     
33	АБ ГИМ свободен               
50	Есть связь                    
150	Нет связи                     
13	Удержание на ОТ               
91	Вызов входящий (авт)          
39	Конец ДЛВ                     
21	Отключить ГТ ПА               
93	Повторный вызов               
87	Смена СА                      
53	СНИ                           
52	СОИ                           
102	Переезд АБ                    
35	Не выбран СА                  
15	Окончание набора цифры        
161	Установить регламент          
162	Отключить регламент           
201	Опрос вызова на РМО           
202	Опрос с удержания             
203	Соединение абонентов          
204	Разъединение абонентов        
30	Номер ретранслятора           
300	Норма                         
301	Обрыв линии                   
302	Авария канала(по достовер.)   
303	Авария канального интерфейса  
304	Авария перифирийного модуля   
310	Авария ПЯ                     
311	Авария станц.интерфейса СА    
305	Авария маркера                
312	Нет сигнала "Кодовая"         
330	Нет подтв.команды с ЦРС       
331	Нет ответа на запрос сост-я   
332	Нет ответа на запрос режима   
337	Авария передатчика ЦРС        
338	Авария приемника ЦРС          
339	Авария АФУ ЦРС                
340	Авария СЛ ЦРС                 
341	Авария фидера питания ЦРС     
344	Вскрытие дверей ЦРС           
345	Пожар в помещении ЦРС         
371	НСД к ЦРС                     
372	Авария БУ ЦРС                 
389	Перезапуск БУ ЦРС             
342	Авария волны маркера          
343	Норма                         
391	Вход.вызов с неиспр.СА        
205	Возврат разбитого соединения  
88	Смена ключа                   
200	Нажата кнопка "Выход"         
211	Служ. отметка "Не слышно"     
212	Служ. отметка "Не отвечает"   
213	Служ. отметка "Занято"        
214	Служ. отметка "Проверка"      
215	Служ. отметка "Претензия"     
216	Служ. отметка "Без СНХ"       
217	Служ. отметка "Авария"        
20	Подключение МТ                
27	ПВ                            
29	ПНН                           
31	СБР                           
\.


--
-- Data for Name: tek_regl; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tek_regl (date_time, type, chan, vrc, kod, nac, fnum, kind) FROM stdin;
\.


--
-- Data for Name: tek_sign; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tek_sign (date_time, type, i_ko, i_kreit, i_cell, i_chan, ch1, fnum1, kod_soob, r_ko, r_kreit, r_cell, r_chan, ch2, fnum2, tlf_num, level, type1, type2) FROM stdin;
\.


--
-- Data for Name: tek_soob_rk; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tek_soob_rk (date_time, type, chan, vrc, kod, nac, fnum, kind) FROM stdin;
\.


--
-- Data for Name: tel_ab; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tel_ab (num, fio, dolz, dt) FROM stdin;
20	СУВИРОВ ИГОРЬ БОРИСОВИЧ                           	ИНЖЕНЕР НИИА                                      	2012-10-10 13:56:38
31	Комаров ДМИТРИЙ АЛЕКСАНДРОВИЧ                     	НАЧАЛЬНИК 2 ОТДЕЛЕНИЯ                             	2013-10-23 18:13:39
27	ФРАГМЕНТ "СОЧИ"                                   	важно                                             	2013-10-24 08:17:53
32	Начальник Смены                                   	начальник смены                                   	2013-10-24 08:23:16
28	Жук Игорь Владимирович                            	Зам. начальника 10 отдела                         	2013-10-23 17:41:48
21	АНТОНОВ Игорь Анатольевич                         	НАЧАЛЬНИК 10 ОТДЕЛА                               	2013-10-23 17:43:57
29	Козев Сергей Николаевич                           	Главный инженер 10 отдела                         	2013-10-23 17:45:40
30	кожеченков василий викторович                     	начальник 1 отделения                             	2013-10-23 17:48:58
\.


--
-- Data for Name: tel_list; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tel_list (num, type, zag, dop, nomer, rmo, dt) FROM stdin;
10	0	МОБИЛЬНЫЙ                                         	                                                  	312             	1	\N
1	11	КАБИНЕТ                                           	                                                  	11              	1	\N
1	1	ДАЧА                                              	                                                  	45              	3	2008-11-18 11:58:54
11	2	МТС                                               	                                                  	28674           	3	2008-11-06 14:22:45
31	2	                                                  	                                                  	38503           	1	2013-10-23 18:14:23
14	4	РАБОЧИЙ                                           	ОГШЩР                                             	6214468         	2	2009-12-24 14:26:45
14	4	ДОмашний                                          	                                                  	4444444         	2	2009-12-24 15:15:40
27	11	КАРС 1                                            	Начальник смены                                   	0658            	2	2013-09-19 11:27:11
14	8	новый                                             	                                                  	34              	2	2009-12-24 15:22:26
27	2	НАЧАЛЬНИК СМЕНЫ КО                                	Кросс "С"                                         	38526           	1	2013-09-18 14:29:51
27	8	КРОСС НС                                          	                                                  	13              	2	2013-09-24 15:39:55
31	4	                                                  	                                                  	4310            	1	2013-10-23 18:15:38
27	4	РМди                                              	                                                  	4408            	2	2013-10-24 08:19:01
32	4	внс                                               	                                                  	4410            	2	2013-10-24 08:21:16
21	2	Верхнее здание                                    	                                                  	26986           	2	2013-10-23 17:38:40
32	2	АТС 2                                             	                                                  	38510           	2	2013-10-24 08:21:51
21	6	Верхнее здание                                    	                                                  	295             	2	2013-10-23 17:39:17
27	8	ПА                                                	                                                  	12              	2	2013-09-18 14:43:13
21	2	Верхнее здание                                    	                                                  	38500           	2	2013-10-23 17:39:36
28	2	Верхнее здание                                    	                                                  	38501           	2	2013-10-23 17:42:19
28	2	Верхнее здание                                    	                                                  	26477           	2	2013-10-23 17:42:40
20	4	РАБОЧИЙ                                           	10 -14                                            	84956193178     	2	2013-02-07 15:19:05
28	4	Верхнее здание                                    	                                                  	4398            	2	2013-10-23 17:43:33
29	2	Верхнее здание                                    	                                                  	38502           	2	2013-10-23 17:46:15
29	4	Верхнее здание                                    	                                                  	4500            	2	2013-10-23 17:47:09
30	2	верхнее здание                                    	                                                  	38516           	2	2013-10-23 17:50:08
30	4	                                                  	                                                  	4412            	2	2013-10-23 17:51:28
20	4	МОБИЛЬНЫЙ                                         	                                                  	89032313700     	2	2013-02-15 11:05:46
30	6	                                                  	                                                  	212             	2	2013-10-23 17:52:10
32	6	пмс                                               	                                                  	213             	2	2013-10-24 08:22:43
27	11	КАРС 2                                            	Начальник смены                                   	0659            	2	2013-09-19 11:28:41
32	4	городской                                         	                                                  	02623513        	2	2013-10-24 08:24:02
21	4	ВНУТРЕННИЙ                                        	                                                  	02504399        	2	2013-10-24 08:24:33
\.


--
-- Data for Name: tprz; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tprz (dt_beg, dt_end, ch_from, ch_to, ch_ab, fnum) FROM stdin;
2012-05-25 09:43:39.754897	2012-05-25 10:01:27.793039	8742	8741	8741	13
2012-07-10 15:31:09.904778	2012-07-10 16:18:48.396812	8903	8904	8904	15
2012-07-16 13:06:19.592335	2012-07-16 14:38:10.330301	8871	8870	8870	15
2012-07-16 12:59:03.734306	2012-07-16 13:00:46.225962	8870	8871	8871	13
\.


--
-- Data for Name: tregl; Type: TABLE DATA; Schema: public; Owner: root
--

COPY tregl (kod, soob) FROM stdin;
3	М3-1           
4	М3-2           
5	СМ3-1          
6	СМ3-2          
74	СВН            
81	СН-1           
82	СН-2           
83	СН-3           
84	СН-4           
85	СН-5           
86	СН-6           
87	СН-7           
88	СОН            
201	КПВ-А          
2	СЗ-А           
11	ИВ             
12	ИВ-К           
13	ИВ-Ц           
18	СЗКА-1         
21	СЗКА-2         
22	СЗКА-0         
24	СЗКА-Н         
14	КПВ            
17	СОЦ            
25	СОА            
206	СОА-Н          
10	СМН РПУ        
15	СМН-А          
19	ПДТ СМН        
0	СИНХ Р РЦ      
91	М1-1           
92	М1-2           
93	М2-1           
94	М2-2           
95	СМ1-1          
96	СМ1-2          
97	СМ2-1          
98	СМ2-2          
99	КД             
27	ВКЛ  ПРД РЦ    
28	ВКЛ  ДЕЖ  РЦ   
29	ВКЛ  Ш  РЦ     
65	ВКЛ  ПРГ  ПРМ  
66	ВКЛ  ПРГ  ПРД  
207	ВЧ  АПЗК       
23	ВКЛ  АПЗК      
69	ВКЛ РЕГЛ КК    
67	ВП КК          
42	ПДТ КМ         
34	СОИ            
35	СНИ            
33	ЗПР            
72	АВ БУ          
30	АВ ПДТ РЦ      
37	АВ ПРД РЦ      
38	АВ ПРМ РЦ      
39	АВ АФУ РЦ      
40	АВ СЛ РЦ       
41	АВ ФП РЦ       
43	Норма          
244	АВ ВД          
245	АВ ПЖ          
89	ПРЗ БУ РЦ      
62	ПРЗ БУ КК      
64	ПД Т ПРЗ РЦ    
70	 ПДТ ПРЗ КК    
32	 ПДТ           
76	ЗПР РЕЖ        
77	РЕЖ            
46	ВКЛ РТ_Н       
47	ВЫКЛ РТ_Н      
48	ВКЛ Ш РТ_Н     
57	ПДТ КМ РТ_Н    
80	ПРЗ БУ РТ_Н    
79	ПДТ ПРЗ РТ_Н   
75	ЗПР РЕЖ РТ_Н   
49	РЕЖ РТ_Н       
52	АВ ПРД РТ_Н    
53	АВ ПРМ РТ_Н    
54	СОИ РТ_Н       
55	АВ АФУ РТ_Н    
50	АВ СЛ РТ_Н     
56	АВ ФП РТ_Н     
51	ПДТ С РТ_Н     
58	ВКЛ РТ_Л       
59	ВЫКЛ РТ_Л      
60	ВКЛ ШРТ_Л      
63	ПДТ КМ РТ_Л    
7	ВЧ АПЗК        
44	АВ ВД КК       
45	АВ ПЖ КК       
20	АВ БП КК       
8	АВ КРК КК      
9	АВ КОМ КК      
71	НСД РЦ         
90	НСД РТ_Н       
266	ВКЛ РР КП      
68	ВКЛ АР КП      
269	ПДТ КМ КП      
73	СЗКА-АВТ       
1	КПВ-А          
3	М3-1           
4	М3-2           
5	СМ3-1          
6	СМ3-2          
74	СВН            
81	СН-1           
82	СН-2           
83	СН-3           
84	СН-4           
85	СН-5           
86	СН-6           
87	СН-7           
88	СОН            
201	КПВ-А          
2	СЗ-А           
11	ИВ             
12	ИВ-К           
13	ИВ-Ц           
18	СЗКА-1         
21	СЗКА-2         
22	СЗКА-0         
24	СЗКА-Н         
14	КПВ            
17	СОЦ            
25	СОА            
206	СОА-Н          
10	СМН РПУ        
15	СМН-А          
19	ПДТ СМН        
0	СИНХ Р РЦ      
91	М1-1           
92	М1-2           
93	М2-1           
94	М2-2           
95	СМ1-1          
96	СМ1-2          
97	СМ2-1          
98	СМ2-2          
99	КД             
27	ВКЛ  ПРД РЦ    
28	ВКЛ  ДЕЖ  РЦ   
29	ВКЛ  Ш  РЦ     
65	ВКЛ  ПРГ  ПРМ  
66	ВКЛ  ПРГ  ПРД  
207	ВЧ  АПЗК       
23	ВКЛ  АПЗК      
69	ВКЛ РЕГЛ КК    
67	ВП КК          
42	ПДТ КМ         
34	СОИ            
35	СНИ            
33	ЗПР            
72	АВ БУ          
30	АВ ПДТ РЦ      
37	АВ ПРД РЦ      
38	АВ ПРМ РЦ      
39	АВ АФУ РЦ      
40	АВ СЛ РЦ       
41	АВ ФП РЦ       
43	Норма          
244	АВ ВД          
245	АВ ПЖ          
89	ПРЗ БУ РЦ      
62	ПРЗ БУ КК      
64	ПД Т ПРЗ РЦ    
70	 ПДТ ПРЗ КК    
32	 ПДТ           
76	ЗПР РЕЖ        
77	РЕЖ            
46	ВКЛ РТ_Н       
47	ВЫКЛ РТ_Н      
48	ВКЛ Ш РТ_Н     
57	ПДТ КМ РТ_Н    
80	ПРЗ БУ РТ_Н    
79	ПДТ ПРЗ РТ_Н   
75	ЗПР РЕЖ РТ_Н   
49	РЕЖ РТ_Н       
52	АВ ПРД РТ_Н    
53	АВ ПРМ РТ_Н    
54	СОИ РТ_Н       
55	АВ АФУ РТ_Н    
50	АВ СЛ РТ_Н     
56	АВ ФП РТ_Н     
51	ПДТ С РТ_Н     
58	ВКЛ РТ_Л       
59	ВЫКЛ РТ_Л      
60	ВКЛ ШРТ_Л      
63	ПДТ КМ РТ_Л    
7	ВЧ АПЗК        
44	АВ ВД КК       
45	АВ ПЖ КК       
20	АВ БП КК       
8	АВ КРК КК      
9	АВ КОМ КК      
71	НСД РЦ         
90	НСД РТ_Н       
266	ВКЛ РР КП      
68	ВКЛ АР КП      
269	ПДТ КМ КП      
73	СЗКА-АВТ       
1	КПВ-А          
\.


--
-- Data for Name: ui_ip; Type: TABLE DATA; Schema: public; Owner: nick
--

COPY ui_ip (index, name, ip, type, sost) FROM stdin;
17	ГШ	192.168.1.127	0	f
1	УИ РМИШ	192.168.1.111	0	f
0	УИ РМИШ	192.168.1.110	0	f
2	УИ РМИШ	192.168.1.112	0	f
15	ГШ	192.168.1.125	0	f
22	ГШ	192.168.1.132	0	f
14	ГШ	192.168.1.124	0	f
12	ГШ	192.168.1.122	0	f
21	ГШ	192.168.1.131	0	f
19	ГШ	192.168.1.129	0	f
20	ГШ	192.168.1.130	0	f
13	ГШ	192.168.1.123	0	f
16	ГШ	192.168.1.126	0	f
23	ГШ	192.168.1.133	0	f
18	ГШ	192.168.1.128	0	f
3	УИ РМИШ	192.168.1.113	0	f
4	УИ РМИШ	192.168.1.114	0	f
5	УИ РМИШ	192.168.1.115	0	f
6	УИ РМИШ	192.168.1.116	0	f
7	УИ РМИШ	192.168.1.117	0	f
8	УИ РМИШ	192.168.1.118	0	f
32	УИ УПС	192.168.1.146	1	t
33	УИ УПС	192.168.1.147	1	t
25	УИ УПС	192.168.1.135	1	t
29	УИ УПС	192.168.1.139	1	t
34	УИ УПС	192.168.1.148	1	t
30	УИ УПС	192.168.1.140	1	t
24	УИ УПС	192.168.1.134	1	t
35	УИ УПС	192.168.1.149	1	t
26	УИ УПС	192.168.1.136	1	t
31	УИ УПС	192.168.1.141	1	t
36	УИ АРПУ	192.168.1.158	2	f
37	УИ АРПУ	192.168.1.159	2	f
38	УИ АРПУ	192.168.1.160	2	f
39	УИ АРПУ	192.168.1.161	2	f
40	УИ АРПУ	192.168.1.162	2	f
42	УИ АРПУ	192.168.1.164	2	f
41	УИ АРПУ	192.168.1.163	2	f
43	УИ АРПУ	192.168.1.165	2	f
27	УИ УПС	192.168.1.137	1	f
28	УИ УПС	192.168.1.138	1	f
9	УИ РМИШ	192.168.1.119	0	f
10	УИ РМИШ	192.168.1.120	0	f
11	УИ РМИШ	192.168.1.121	0	f
\.


--
-- Data for Name: ups; Type: TABLE DATA; Schema: public; Owner: root
--

COPY ups (num, sost, ui, ui_contact) FROM stdin;
1	4	32	0
13	4	35	0
14	4	35	3
15	4	35	8
16	4	35	11
19	4	24	8
20	4	24	11
7	4	33	8
8	4	33	11
17	4	24	0
18	4	24	3
23	4	25	8
24	4	25	11
2	4	32	3
21	4	25	0
22	0	25	3
4	4	32	11
11	4	34	8
12	4	34	11
25	4	26	0
26	4	26	3
27	4	26	8
28	4	26	11
29	4	27	0
30	4	27	3
31	4	27	8
32	4	27	11
35	4	28	8
36	4	28	11
37	4	29	0
38	4	29	3
39	4	29	8
9	4	34	0
10	4	34	3
40	4	29	11
41	4	30	0
3	4	32	8
5	4	33	0
6	4	33	3
42	4	30	3
45	6	31	0
46	4	31	3
47	4	31	8
48	4	31	11
43	6	30	8
44	4	30	11
33	4	28	0
34	4	28	3
\.


--
-- Data for Name: uso; Type: TABLE DATA; Schema: public; Owner: root
--

COPY uso (num, name, sost, index) FROM stdin;
1	RMISH   	1	17
2	RMISH   	1	18
3	RMISH   	1	19
1	GSH     	1	14
2	GSH     	1	15
3	GSH     	1	16
1	UPS_2   	1	10
1	UPS_1   	1	8
2	UPS_2   	1	11
2	UPS_1   	1	9
3	UPS_2   	1	12
4	UPS_2   	1	13
1	ARPU_1  	0	0
2	ARPU_1  	0	1
3	ARPU_1  	0	2
2	ARPU_2  	0	5
4	ARPU_1  	0	3
4	ARPU_2  	0	7
3	ARPU_2  	0	6
1	ARPU_2  	0	4
\.


--
-- Data for Name: vkk; Type: TABLE DATA; Schema: public; Owner: root
--

COPY vkk (num, vrc, mar, crs, fnum, freq) FROM stdin;
1	1	\N	\N	\N	\N
2	1	\N	\N	\N	\N
4	1	92	27	16	01 02 03 04 05 06                                                                                                                                                                                                                                                                                           
5	1	\N	\N	\N	\N
6	1	\N	\N	\N	\N
7	1	\N	\N	\N	\N
8	1	\N	\N	\N	\N
9	1	\N	\N	\N	\N
10	1	\N	\N	\N	\N
11	1	\N	\N	\N	\N
12	1	\N	\N	\N	\N
13	1	\N	\N	\N	\N
14	1	\N	\N	\N	\N
15	1	\N	\N	\N	\N
16	1	\N	\N	\N	\N
18	1	\N	\N	\N	\N
19	1	\N	\N	\N	\N
20	1	\N	\N	\N	\N
21	1	\N	\N	\N	\N
22	1	\N	\N	\N	\N
23	1	\N	\N	\N	\N
24	1	\N	\N	\N	\N
25	1	\N	\N	\N	\N
26	1	\N	\N	\N	\N
27	1	\N	\N	\N	\N
28	1	\N	\N	\N	\N
29	1	\N	\N	\N	\N
30	1	\N	\N	\N	\N
31	1	\N	\N	\N	\N
32	1	\N	\N	\N	\N
33	1	\N	\N	\N	\N
34	1	\N	\N	\N	\N
35	1	\N	\N	\N	\N
36	1	\N	\N	\N	\N
37	1	\N	\N	\N	\N
38	1	\N	\N	\N	\N
39	1	\N	\N	\N	\N
40	1	\N	\N	\N	\N
41	1	\N	\N	\N	\N
42	1	\N	\N	\N	\N
43	1	\N	\N	\N	\N
44	1	\N	\N	\N	\N
45	1	\N	\N	\N	\N
46	1	\N	\N	\N	\N
47	1	\N	\N	\N	\N
48	1	\N	\N	\N	\N
49	1	\N	\N	\N	\N
50	1	\N	\N	\N	\N
51	1	\N	\N	\N	\N
52	1	\N	\N	\N	\N
53	1	91	28	14	\N
54	1	\N	\N	\N	\N
55	1	\N	\N	\N	\N
56	1	\N	\N	\N	\N
57	1	\N	\N	\N	\N
58	1	\N	\N	\N	\N
59	1	\N	\N	\N	\N
60	1	\N	\N	\N	\N
61	1	\N	\N	\N	\N
62	1	\N	\N	\N	\N
63	1	\N	\N	\N	\N
64	1	\N	\N	\N	\N
65	1	\N	\N	\N	\N
66	1	\N	\N	\N	\N
67	1	\N	\N	\N	\N
68	1	\N	\N	\N	\N
69	1	\N	\N	\N	\N
70	1	\N	\N	\N	\N
71	1	91	28	23	\N
72	1	\N	\N	\N	\N
1	2	\N	\N	\N	\N
2	2	\N	\N	\N	\N
3	2	\N	\N	\N	\N
4	2	\N	\N	\N	\N
5	2	\N	\N	\N	\N
6	2	\N	\N	\N	\N
7	2	\N	\N	\N	\N
8	2	\N	\N	\N	\N
9	2	\N	\N	\N	\N
10	2	\N	\N	\N	\N
11	2	\N	\N	\N	\N
12	2	\N	\N	\N	\N
13	2	\N	\N	\N	\N
14	2	\N	\N	\N	\N
15	2	\N	\N	\N	\N
16	2	\N	\N	\N	\N
17	2	\N	\N	\N	\N
18	2	\N	\N	\N	\N
19	2	\N	\N	\N	\N
20	2	\N	\N	\N	\N
21	2	\N	\N	\N	\N
22	2	\N	\N	\N	\N
23	2	\N	\N	\N	\N
24	2	\N	\N	\N	\N
25	2	\N	\N	\N	\N
26	2	\N	\N	\N	\N
27	2	\N	\N	\N	\N
28	2	\N	\N	\N	\N
29	2	\N	\N	\N	\N
30	2	\N	\N	\N	\N
31	2	\N	\N	\N	\N
32	2	\N	\N	\N	\N
33	2	\N	\N	\N	\N
34	2	\N	\N	\N	\N
35	2	\N	\N	\N	\N
36	2	\N	\N	\N	\N
37	2	\N	\N	\N	\N
38	2	\N	\N	\N	\N
39	2	\N	\N	\N	\N
40	2	\N	\N	\N	\N
41	2	\N	\N	\N	\N
42	2	\N	\N	\N	\N
43	2	\N	\N	\N	\N
44	2	\N	\N	\N	\N
45	2	\N	\N	\N	\N
46	2	\N	\N	\N	\N
47	2	\N	\N	\N	\N
48	2	\N	\N	\N	\N
49	2	\N	\N	\N	\N
50	2	\N	\N	\N	\N
51	2	\N	\N	\N	\N
52	2	\N	\N	\N	\N
53	2	\N	\N	\N	\N
54	2	\N	\N	\N	\N
55	2	\N	\N	\N	\N
56	2	\N	\N	\N	\N
57	2	\N	\N	\N	\N
58	2	\N	\N	\N	\N
59	2	\N	\N	\N	\N
60	2	\N	\N	\N	\N
61	2	\N	\N	\N	\N
62	2	\N	\N	\N	\N
63	2	\N	\N	\N	\N
64	2	\N	\N	\N	\N
65	2	\N	\N	\N	\N
66	2	\N	\N	\N	\N
68	2	\N	\N	\N	\N
69	2	\N	\N	\N	\N
70	2	\N	\N	\N	\N
71	2	\N	\N	\N	\N
72	2	\N	\N	\N	\N
1	3	\N	\N	\N	\N
2	3	\N	\N	\N	\N
3	3	\N	\N	\N	\N
4	3	\N	\N	\N	\N
5	3	\N	\N	\N	\N
6	3	\N	\N	\N	\N
7	3	\N	\N	\N	\N
8	3	\N	\N	\N	\N
9	3	\N	\N	\N	\N
10	3	\N	\N	\N	\N
11	3	\N	\N	\N	\N
12	3	\N	\N	\N	\N
13	3	\N	\N	\N	\N
14	3	\N	\N	\N	\N
15	3	\N	\N	\N	\N
16	3	\N	\N	\N	\N
18	3	\N	\N	\N	\N
19	3	\N	\N	\N	\N
20	3	\N	\N	\N	\N
21	3	\N	\N	\N	\N
22	3	\N	\N	\N	\N
23	3	\N	\N	\N	\N
24	3	\N	\N	\N	\N
25	3	\N	\N	\N	\N
26	3	\N	\N	\N	\N
27	3	\N	\N	\N	\N
28	3	\N	\N	\N	\N
29	3	\N	\N	\N	\N
30	3	\N	\N	\N	\N
31	3	\N	\N	\N	\N
32	3	\N	\N	\N	\N
33	3	\N	\N	\N	\N
34	3	\N	\N	\N	\N
35	3	\N	\N	\N	\N
36	3	\N	\N	\N	\N
37	3	\N	\N	\N	\N
38	3	\N	\N	\N	\N
39	3	\N	\N	\N	\N
40	3	\N	\N	\N	\N
41	3	\N	\N	\N	\N
42	3	\N	\N	\N	\N
43	3	\N	\N	\N	\N
44	3	\N	\N	\N	\N
45	3	\N	\N	\N	\N
46	3	\N	\N	\N	\N
47	3	\N	\N	\N	\N
48	3	\N	\N	\N	\N
49	3	\N	\N	\N	\N
50	3	\N	\N	\N	\N
51	3	\N	\N	\N	\N
52	3	\N	\N	\N	\N
53	3	\N	\N	\N	\N
54	3	\N	\N	\N	\N
55	3	\N	\N	\N	\N
56	3	\N	\N	\N	\N
57	3	\N	\N	\N	\N
58	3	\N	\N	\N	\N
59	3	\N	\N	\N	\N
60	3	\N	\N	\N	\N
61	3	\N	\N	\N	\N
62	3	\N	\N	\N	\N
63	3	\N	\N	\N	\N
64	3	\N	\N	\N	\N
65	3	\N	\N	\N	\N
66	3	\N	\N	\N	\N
67	3	\N	\N	\N	\N
68	3	\N	\N	\N	\N
69	3	\N	\N	\N	\N
70	3	\N	\N	\N	\N
71	3	\N	\N	\N	\N
72	3	\N	\N	\N	\N
1	4	\N	\N	\N	\N
2	4	\N	\N	\N	\N
3	4	\N	\N	\N	\N
4	4	\N	\N	\N	\N
5	4	\N	\N	\N	\N
6	4	\N	\N	\N	\N
7	4	\N	\N	\N	\N
8	4	\N	\N	\N	\N
9	4	\N	\N	\N	\N
10	4	\N	\N	\N	\N
11	4	\N	\N	\N	\N
12	4	\N	\N	\N	\N
13	4	\N	\N	\N	\N
14	4	\N	\N	\N	\N
15	4	\N	\N	\N	\N
16	4	\N	\N	\N	\N
17	4	\N	\N	\N	\N
18	4	\N	\N	\N	\N
19	4	\N	\N	\N	\N
20	4	\N	\N	\N	\N
21	4	\N	\N	\N	\N
22	4	\N	\N	\N	\N
23	4	\N	\N	\N	\N
24	4	\N	\N	\N	\N
25	4	\N	\N	\N	\N
26	4	\N	\N	\N	\N
27	4	\N	\N	\N	\N
28	4	\N	\N	\N	\N
29	4	\N	\N	\N	\N
30	4	\N	\N	\N	\N
31	4	\N	\N	\N	\N
32	4	\N	\N	\N	\N
33	4	\N	\N	\N	\N
34	4	\N	\N	\N	\N
35	4	\N	\N	\N	\N
36	4	\N	\N	\N	\N
37	4	\N	\N	\N	\N
38	4	\N	\N	\N	\N
39	4	\N	\N	\N	\N
40	4	\N	\N	\N	\N
41	4	\N	\N	\N	\N
42	4	\N	\N	\N	\N
43	4	\N	\N	\N	\N
44	4	\N	\N	\N	\N
45	4	\N	\N	\N	\N
46	4	\N	\N	\N	\N
47	4	\N	\N	\N	\N
48	4	\N	\N	\N	\N
49	4	\N	\N	\N	\N
50	4	\N	\N	\N	\N
51	4	\N	\N	\N	\N
52	4	\N	\N	\N	\N
53	4	\N	\N	\N	\N
54	4	\N	\N	\N	\N
55	4	\N	\N	\N	\N
56	4	\N	\N	\N	\N
57	4	\N	\N	\N	\N
58	4	\N	\N	\N	\N
59	4	\N	\N	\N	\N
60	4	\N	\N	\N	\N
61	4	\N	\N	\N	\N
62	4	\N	\N	\N	\N
63	4	\N	\N	\N	\N
64	4	\N	\N	\N	\N
65	4	\N	\N	\N	\N
66	4	\N	\N	\N	\N
67	4	\N	\N	\N	\N
68	4	\N	\N	\N	\N
69	4	\N	\N	\N	\N
70	4	\N	\N	\N	\N
71	4	\N	\N	\N	\N
72	4	\N	\N	\N	\N
1	5	\N	\N	\N	\N
2	5	\N	\N	\N	\N
3	5	\N	\N	\N	\N
4	5	\N	\N	\N	\N
5	5	\N	\N	\N	\N
6	5	\N	\N	\N	\N
7	5	\N	\N	\N	\N
8	5	\N	\N	\N	\N
9	5	\N	\N	\N	\N
10	5	\N	\N	\N	\N
11	5	\N	\N	\N	\N
12	5	\N	\N	\N	\N
13	5	\N	\N	\N	\N
14	5	\N	\N	\N	\N
15	5	\N	\N	\N	\N
16	5	\N	\N	\N	\N
17	5	\N	\N	\N	\N
18	5	\N	\N	\N	\N
19	5	\N	\N	\N	\N
20	5	\N	\N	\N	\N
21	5	\N	\N	\N	\N
22	5	\N	\N	\N	\N
23	5	\N	\N	\N	\N
24	5	\N	\N	\N	\N
25	5	\N	\N	\N	\N
26	5	\N	\N	\N	\N
27	5	\N	\N	\N	\N
28	5	\N	\N	\N	\N
29	5	\N	\N	\N	\N
30	5	\N	\N	\N	\N
31	5	\N	\N	\N	\N
32	5	\N	\N	\N	\N
33	5	\N	\N	\N	\N
34	5	\N	\N	\N	\N
35	5	\N	\N	\N	\N
36	5	\N	\N	\N	\N
37	5	\N	\N	\N	\N
38	5	\N	\N	\N	\N
39	5	\N	\N	\N	\N
40	5	\N	\N	\N	\N
41	5	\N	\N	\N	\N
42	5	\N	\N	\N	\N
43	5	\N	\N	\N	\N
44	5	\N	\N	\N	\N
45	5	\N	\N	\N	\N
46	5	\N	\N	\N	\N
47	5	\N	\N	\N	\N
48	5	\N	\N	\N	\N
49	5	\N	\N	\N	\N
50	5	\N	\N	\N	\N
51	5	\N	\N	\N	\N
52	5	\N	\N	\N	\N
53	5	\N	\N	\N	\N
54	5	\N	\N	\N	\N
55	5	\N	\N	\N	\N
56	5	\N	\N	\N	\N
57	5	\N	\N	\N	\N
58	5	\N	\N	\N	\N
59	5	\N	\N	\N	\N
60	5	\N	\N	\N	\N
61	5	\N	\N	\N	\N
62	5	\N	\N	\N	\N
63	5	\N	\N	\N	\N
64	5	\N	\N	\N	\N
65	5	\N	\N	\N	\N
66	5	\N	\N	\N	\N
67	5	\N	\N	\N	\N
68	5	\N	\N	\N	\N
69	5	\N	\N	\N	\N
70	5	\N	\N	\N	\N
71	5	\N	\N	\N	\N
72	5	\N	\N	\N	\N
1	6	\N	\N	\N	\N
2	6	\N	\N	\N	\N
3	6	\N	\N	\N	\N
4	6	\N	\N	\N	\N
5	6	\N	\N	\N	\N
6	6	\N	\N	\N	\N
7	6	\N	\N	\N	\N
8	6	\N	\N	\N	\N
9	6	\N	\N	\N	\N
10	6	\N	\N	\N	\N
11	6	\N	\N	\N	\N
12	6	\N	\N	\N	\N
13	6	\N	\N	\N	\N
14	6	\N	\N	\N	\N
15	6	\N	\N	\N	\N
16	6	\N	\N	\N	\N
17	6	\N	\N	\N	\N
18	6	\N	\N	\N	\N
19	6	\N	\N	\N	\N
20	6	\N	\N	\N	\N
21	6	\N	\N	\N	\N
22	6	\N	\N	\N	\N
23	6	\N	\N	\N	\N
24	6	\N	\N	\N	\N
25	6	\N	\N	\N	\N
26	6	\N	\N	\N	\N
27	6	\N	\N	\N	\N
28	6	\N	\N	\N	\N
29	6	\N	\N	\N	\N
30	6	\N	\N	\N	\N
31	6	\N	\N	\N	\N
32	6	\N	\N	\N	\N
33	6	\N	\N	\N	\N
34	6	\N	\N	\N	\N
35	6	\N	\N	\N	\N
36	6	\N	\N	\N	\N
37	6	\N	\N	\N	\N
38	6	\N	\N	\N	\N
39	6	\N	\N	\N	\N
40	6	\N	\N	\N	\N
41	6	\N	\N	\N	\N
42	6	\N	\N	\N	\N
43	6	\N	\N	\N	\N
44	6	\N	\N	\N	\N
45	6	\N	\N	\N	\N
46	6	\N	\N	\N	\N
47	6	\N	\N	\N	\N
48	6	\N	\N	\N	\N
49	6	\N	\N	\N	\N
50	6	\N	\N	\N	\N
51	6	\N	\N	\N	\N
52	6	\N	\N	\N	\N
53	6	\N	\N	\N	\N
54	6	\N	\N	\N	\N
55	6	\N	\N	\N	\N
56	6	\N	\N	\N	\N
57	6	\N	\N	\N	\N
58	6	\N	\N	\N	\N
59	6	\N	\N	\N	\N
60	6	\N	\N	\N	\N
61	6	\N	\N	\N	\N
62	6	\N	\N	\N	\N
63	6	\N	\N	\N	\N
64	6	\N	\N	\N	\N
65	6	\N	\N	\N	\N
66	6	\N	\N	\N	\N
67	6	\N	\N	\N	\N
68	6	\N	\N	\N	\N
69	6	\N	\N	\N	\N
70	6	\N	\N	\N	\N
71	6	\N	\N	\N	\N
72	6	\N	\N	\N	\N
1	7	\N	\N	\N	\N
2	7	\N	\N	\N	\N
3	7	\N	\N	\N	\N
4	7	\N	\N	\N	\N
5	7	\N	\N	\N	\N
6	7	\N	\N	\N	\N
7	7	\N	\N	\N	\N
8	7	\N	\N	\N	\N
9	7	\N	\N	\N	\N
10	7	\N	\N	\N	\N
11	7	\N	\N	\N	\N
12	7	\N	\N	\N	\N
13	7	\N	\N	\N	\N
14	7	\N	\N	\N	\N
15	7	\N	\N	\N	\N
16	7	\N	\N	\N	\N
17	7	\N	\N	\N	\N
18	7	\N	\N	\N	\N
19	7	\N	\N	\N	\N
20	7	\N	\N	\N	\N
21	7	\N	\N	\N	\N
22	7	\N	\N	\N	\N
23	7	\N	\N	\N	\N
24	7	\N	\N	\N	\N
25	7	\N	\N	\N	\N
26	7	\N	\N	\N	\N
27	7	\N	\N	\N	\N
28	7	\N	\N	\N	\N
29	7	\N	\N	\N	\N
30	7	\N	\N	\N	\N
31	7	\N	\N	\N	\N
32	7	\N	\N	\N	\N
33	7	\N	\N	\N	\N
34	7	\N	\N	\N	\N
35	7	\N	\N	\N	\N
36	7	\N	\N	\N	\N
37	7	\N	\N	\N	\N
38	7	\N	\N	\N	\N
39	7	\N	\N	\N	\N
40	7	\N	\N	\N	\N
41	7	\N	\N	\N	\N
42	7	\N	\N	\N	\N
43	7	\N	\N	\N	\N
44	7	\N	\N	\N	\N
45	7	\N	\N	\N	\N
46	7	\N	\N	\N	\N
47	7	\N	\N	\N	\N
48	7	\N	\N	\N	\N
49	7	\N	\N	\N	\N
50	7	\N	\N	\N	\N
51	7	\N	\N	\N	\N
52	7	\N	\N	\N	\N
53	7	\N	\N	\N	\N
54	7	\N	\N	\N	\N
55	7	\N	\N	\N	\N
56	7	\N	\N	\N	\N
57	7	\N	\N	\N	\N
58	7	\N	\N	\N	\N
59	7	\N	\N	\N	\N
60	7	\N	\N	\N	\N
61	7	\N	\N	\N	\N
62	7	\N	\N	\N	\N
63	7	\N	\N	\N	\N
64	7	\N	\N	\N	\N
65	7	\N	\N	\N	\N
66	7	\N	\N	\N	\N
67	7	\N	\N	\N	\N
68	7	\N	\N	\N	\N
69	7	\N	\N	\N	\N
70	7	\N	\N	\N	\N
71	7	\N	\N	\N	\N
72	7	\N	\N	\N	\N
1	8	\N	\N	\N	\N
2	8	\N	\N	\N	\N
3	8	\N	\N	\N	\N
4	8	\N	\N	\N	\N
5	8	\N	\N	\N	\N
6	8	\N	\N	\N	\N
7	8	\N	\N	\N	\N
8	8	\N	\N	\N	\N
9	8	\N	\N	\N	\N
10	8	\N	\N	\N	\N
11	8	\N	\N	\N	\N
12	8	\N	\N	\N	\N
13	8	\N	\N	\N	\N
14	8	\N	\N	\N	\N
15	8	\N	\N	\N	\N
16	8	\N	\N	\N	\N
17	8	\N	\N	\N	\N
18	8	\N	\N	\N	\N
19	8	\N	\N	\N	\N
20	8	\N	\N	\N	\N
21	8	\N	\N	\N	\N
22	8	\N	\N	\N	\N
23	8	\N	\N	\N	\N
24	8	\N	\N	\N	\N
25	8	\N	\N	\N	\N
26	8	\N	\N	\N	\N
27	8	\N	\N	\N	\N
28	8	\N	\N	\N	\N
29	8	\N	\N	\N	\N
30	8	\N	\N	\N	\N
31	8	\N	\N	\N	\N
32	8	\N	\N	\N	\N
33	8	\N	\N	\N	\N
34	8	\N	\N	\N	\N
35	8	\N	\N	\N	\N
36	8	\N	\N	\N	\N
37	8	\N	\N	\N	\N
38	8	\N	\N	\N	\N
39	8	\N	\N	\N	\N
40	8	\N	\N	\N	\N
41	8	\N	\N	\N	\N
42	8	\N	\N	\N	\N
43	8	\N	\N	\N	\N
44	8	\N	\N	\N	\N
45	8	\N	\N	\N	\N
46	8	\N	\N	\N	\N
47	8	\N	\N	\N	\N
48	8	\N	\N	\N	\N
49	8	\N	\N	\N	\N
50	8	\N	\N	\N	\N
51	8	\N	\N	\N	\N
52	8	\N	\N	\N	\N
53	8	\N	\N	\N	\N
54	8	\N	\N	\N	\N
55	8	\N	\N	\N	\N
56	8	\N	\N	\N	\N
57	8	\N	\N	\N	\N
58	8	\N	\N	\N	\N
59	8	\N	\N	\N	\N
60	8	\N	\N	\N	\N
61	8	\N	\N	\N	\N
62	8	\N	\N	\N	\N
63	8	\N	\N	\N	\N
64	8	\N	\N	\N	\N
65	8	\N	\N	\N	\N
66	8	\N	\N	\N	\N
67	8	\N	\N	\N	\N
68	8	\N	\N	\N	\N
69	8	\N	\N	\N	\N
70	8	\N	\N	\N	\N
71	8	\N	\N	\N	\N
72	8	\N	\N	\N	\N
1	9	\N	\N	\N	\N
2	9	\N	\N	\N	\N
3	9	\N	\N	\N	\N
4	9	\N	\N	\N	\N
5	9	\N	\N	\N	\N
6	9	\N	\N	\N	\N
7	9	\N	\N	\N	\N
8	9	\N	\N	\N	\N
9	9	\N	\N	\N	\N
10	9	\N	\N	\N	\N
11	9	\N	\N	\N	\N
12	9	\N	\N	\N	\N
13	9	\N	\N	\N	\N
14	9	\N	\N	\N	\N
15	9	\N	\N	\N	\N
16	9	\N	\N	\N	\N
17	9	\N	\N	\N	\N
18	9	\N	\N	\N	\N
19	9	\N	\N	\N	\N
20	9	\N	\N	\N	\N
21	9	\N	\N	\N	\N
22	9	\N	\N	\N	\N
23	9	\N	\N	\N	\N
24	9	\N	\N	\N	\N
25	9	\N	\N	\N	\N
26	9	\N	\N	\N	\N
27	9	\N	\N	\N	\N
28	9	\N	\N	\N	\N
29	9	\N	\N	\N	\N
30	9	\N	\N	\N	\N
31	9	\N	\N	\N	\N
32	9	\N	\N	\N	\N
33	9	\N	\N	\N	\N
34	9	\N	\N	\N	\N
35	9	\N	\N	\N	\N
36	9	\N	\N	\N	\N
37	9	\N	\N	\N	\N
38	9	\N	\N	\N	\N
39	9	\N	\N	\N	\N
40	9	\N	\N	\N	\N
41	9	\N	\N	\N	\N
42	9	\N	\N	\N	\N
43	9	\N	\N	\N	\N
44	9	\N	\N	\N	\N
45	9	\N	\N	\N	\N
46	9	\N	\N	\N	\N
47	9	\N	\N	\N	\N
48	9	\N	\N	\N	\N
49	9	\N	\N	\N	\N
50	9	\N	\N	\N	\N
51	9	\N	\N	\N	\N
52	9	\N	\N	\N	\N
53	9	\N	\N	\N	\N
54	9	\N	\N	\N	\N
55	9	\N	\N	\N	\N
56	9	\N	\N	\N	\N
57	9	\N	\N	\N	\N
58	9	\N	\N	\N	\N
59	9	\N	\N	\N	\N
60	9	\N	\N	\N	\N
61	9	\N	\N	\N	\N
62	9	\N	\N	\N	\N
63	9	\N	\N	\N	\N
64	9	\N	\N	\N	\N
65	9	\N	\N	\N	\N
66	9	\N	\N	\N	\N
67	9	\N	\N	\N	\N
68	9	\N	\N	\N	\N
69	9	\N	\N	\N	\N
70	9	\N	\N	\N	\N
71	9	\N	\N	\N	\N
72	9	\N	\N	\N	\N
1	10	\N	\N	\N	\N
4	10	\N	\N	\N	\N
7	10	\N	\N	\N	\N
9	10	\N	\N	\N	\N
11	10	\N	\N	\N	\N
14	10	\N	\N	\N	\N
15	10	\N	\N	\N	\N
18	10	\N	\N	\N	\N
19	10	\N	\N	\N	\N
21	10	\N	\N	\N	\N
22	10	\N	\N	\N	\N
23	10	\N	\N	\N	\N
24	10	\N	\N	\N	\N
25	10	\N	\N	\N	\N
26	10	\N	\N	\N	\N
27	10	\N	\N	\N	\N
28	10	\N	\N	\N	\N
29	10	\N	\N	\N	\N
31	10	\N	\N	\N	\N
32	10	\N	\N	\N	\N
33	10	\N	\N	\N	\N
34	10	\N	\N	\N	\N
35	10	\N	\N	\N	\N
36	10	\N	\N	\N	\N
37	10	\N	\N	\N	\N
38	10	\N	\N	\N	\N
39	10	\N	\N	\N	\N
40	10	\N	\N	\N	\N
41	10	\N	\N	\N	\N
42	10	\N	\N	\N	\N
43	10	\N	\N	\N	\N
44	10	\N	\N	\N	\N
45	10	\N	\N	\N	\N
46	10	\N	\N	\N	\N
47	10	\N	\N	\N	\N
48	10	\N	\N	\N	\N
49	10	\N	\N	\N	\N
50	10	\N	\N	\N	\N
51	10	\N	\N	\N	\N
52	10	\N	\N	\N	\N
53	10	\N	\N	\N	\N
54	10	\N	\N	\N	\N
55	10	\N	\N	\N	\N
56	10	\N	\N	\N	\N
57	10	\N	\N	\N	\N
58	10	\N	\N	\N	\N
59	10	\N	\N	\N	\N
60	10	\N	\N	\N	\N
61	10	\N	\N	\N	\N
62	10	\N	\N	\N	\N
63	10	\N	\N	\N	\N
64	10	\N	\N	\N	\N
66	10	\N	\N	\N	\N
68	10	\N	\N	\N	\N
70	10	\N	\N	\N	\N
71	10	\N	\N	\N	\N
2	10	\N	28	\N	\N
5	10	\N	28	\N	\N
6	10	\N	28	\N	\N
3	1	\N	66	\N	\N
8	10	\N	28	\N	\N
65	10	\N	66	\N	\N
12	10	\N	28	\N	\N
67	2	\N	66	\N	\N
67	10	\N	66	\N	\N
16	10	\N	28	\N	\N
17	10	\N	66	\N	\N
17	3	\N	66	\N	\N
17	1	\N	66	\N	\N
20	10	\N	28	\N	\N
69	10	\N	28	\N	\N
30	10	\N	28	\N	\N
3	10	\N	28	\N	\N
72	10	\N	28	\N	\N
10	10	\N	28	\N	\N
13	10	\N	28	\N	\N
\.


--
-- Data for Name: work_user_rmo; Type: TABLE DATA; Schema: public; Owner: root
--

COPY work_user_rmo (id, ch1, kod, ch2, nrmo, nmbr) FROM stdin;
4568	4805	20	4775	1	13
4569	4805	20	4775	1	13
4570	4805	20	4775	1	13
4571	4805	20	4775	1	13
4572	4805	20	4775	1	13
4573	4805	20	4775	1	13
4574	4805	29	4775	1	13
4575	4805	20	4775	1	13
4576	4805	20	4775	1	13
4577	4805	20	4775	1	13
\.


--
-- Name: work_user_rmo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('work_user_rmo_id_seq', 4577, true);


--
-- Data for Name: zapret; Type: TABLE DATA; Schema: public; Owner: root
--

COPY zapret (spisok, ac) FROM stdin;
\.


--
-- Data for Name: zapret_prz; Type: TABLE DATA; Schema: public; Owner: root
--

COPY zapret_prz (v1, v2) FROM stdin;
16	6
16	1
16	2
6	2
2	6
1	2
1	4
4	1
2	1
\.


--
-- Name: color_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY color
    ADD CONSTRAINT color_pkey PRIMARY KEY (kod);


--
-- Name: index_unique; Type: CONSTRAINT; Schema: public; Owner: nick; Tablespace: 
--

ALTER TABLE ONLY ui_ip
    ADD CONSTRAINT index_unique UNIQUE (index);


--
-- Name: k4_help_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY k4_help
    ADD CONSTRAINT k4_help_pkey PRIMARY KEY (order_index);


--
-- Name: k9_help_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY k9_help
    ADD CONSTRAINT k9_help_pkey PRIMARY KEY (order_index);


--
-- Name: kulon_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY kulon
    ADD CONSTRAINT kulon_pkey PRIMARY KEY (num);


--
-- Name: nastr_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY nastr
    ADD CONSTRAINT nastr_pkey PRIMARY KEY (ch_num);


--
-- Name: out_chan_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY out_chan
    ADD CONSTRAINT out_chan_pkey PRIMARY KEY (ko, kreit, cell, chan);


--
-- Name: rk_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY rk
    ADD CONSTRAINT rk_pkey PRIMARY KEY (num);


--
-- Name: sa_rpu_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sa_rpu
    ADD CONSTRAINT sa_rpu_pkey PRIMARY KEY (num);


--
-- Name: sost_cells_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sost_cells
    ADD CONSTRAINT sost_cells_pkey PRIMARY KEY (adr);


--
-- Name: sost_sa_rpu_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY sost_sa_rpu
    ADD CONSTRAINT sost_sa_rpu_pkey PRIMARY KEY (num);


--
-- Name: tab_app_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tab_app
    ADD CONSTRAINT tab_app_pkey PRIMARY KEY (kod);


--
-- Name: tab_regl_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tab_regl
    ADD CONSTRAINT tab_regl_pkey PRIMARY KEY (kod);


--
-- Name: tab_soob_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY tab_soob
    ADD CONSTRAINT tab_soob_pkey PRIMARY KEY (kod);


--
-- Name: uso_pkey; Type: CONSTRAINT; Schema: public; Owner: root; Tablespace: 
--

ALTER TABLE ONLY uso
    ADD CONSTRAINT uso_pkey PRIMARY KEY (index);


--
-- Name: ui_ip_index; Type: INDEX; Schema: public; Owner: nick; Tablespace: 
--

CREATE INDEX ui_ip_index ON ui_ip USING btree (index);


--
-- Name: wur; Type: RULE; Schema: public; Owner: root
--

CREATE RULE wur AS ON INSERT TO work_user_rmo DO NOTIFY work_user_rmo;


--
-- Name: change_color; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_color AFTER INSERT OR DELETE OR UPDATE ON color FOR EACH ROW EXECUTE PROCEDURE color_trigger();


--
-- Name: change_conf_prz; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_conf_prz AFTER INSERT OR DELETE OR UPDATE ON conf_prz FOR EACH ROW EXECUTE PROCEDURE conf_prz_trigger();


--
-- Name: change_conn; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_conn AFTER INSERT OR DELETE OR UPDATE ON conn FOR EACH ROW EXECUTE PROCEDURE conn_trigger();


--
-- Name: change_flag; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_flag AFTER INSERT OR DELETE OR UPDATE ON flag FOR EACH ROW EXECUTE PROCEDURE flag_trigger();


--
-- Name: change_integrity; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_integrity AFTER INSERT OR DELETE OR UPDATE ON integrity FOR EACH ROW EXECUTE PROCEDURE integrity_trigger();


--
-- Name: change_kulon; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_kulon AFTER INSERT OR DELETE OR UPDATE ON kulon FOR EACH ROW EXECUTE PROCEDURE kulon_trigger();


--
-- Name: change_kzn_dkl; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_kzn_dkl AFTER INSERT OR DELETE OR UPDATE ON kzn_dkl FOR EACH ROW EXECUTE PROCEDURE kzn_dkl_trigger();


--
-- Name: change_nastr; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_nastr AFTER INSERT OR DELETE OR UPDATE ON nastr FOR EACH ROW EXECUTE PROCEDURE nastr_trigger();


--
-- Name: change_nsd; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_nsd AFTER INSERT OR DELETE OR UPDATE ON nsd FOR EACH ROW EXECUTE PROCEDURE nsd_trigger();


--
-- Name: change_num_as; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_num_as AFTER INSERT OR DELETE OR UPDATE ON num_as FOR EACH ROW EXECUTE PROCEDURE num_as_trigger();


--
-- Name: change_out_chan; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_out_chan AFTER INSERT OR DELETE OR UPDATE ON out_chan FOR EACH ROW EXECUTE PROCEDURE out_chan_trigger();


--
-- Name: change_pk; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_pk AFTER INSERT OR DELETE OR UPDATE ON pk FOR EACH ROW EXECUTE PROCEDURE pk_trigger();


--
-- Name: change_rk; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_rk AFTER INSERT OR DELETE OR UPDATE ON rk FOR EACH ROW EXECUTE PROCEDURE rk_trigger();


--
-- Name: change_rmo_config; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_rmo_config AFTER INSERT OR DELETE OR UPDATE ON rmo_config FOR EACH ROW EXECUTE PROCEDURE rmo_config_trigger();


--
-- Name: change_sa_rpu; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_sa_rpu AFTER INSERT OR DELETE OR UPDATE ON sa_rpu FOR EACH ROW EXECUTE PROCEDURE sa_rpu_trigger();


--
-- Name: change_sost_cells; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_sost_cells AFTER INSERT OR DELETE OR UPDATE ON sost_cells FOR EACH ROW EXECUTE PROCEDURE sost_cells_trigger();


--
-- Name: change_sost_sa_rpu; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_sost_sa_rpu AFTER INSERT OR DELETE OR UPDATE ON sost_sa_rpu FOR EACH ROW EXECUTE PROCEDURE sost_sa_rpu_trigger();


--
-- Name: change_svaz; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_svaz AFTER INSERT OR DELETE OR UPDATE ON svaz FOR EACH ROW EXECUTE PROCEDURE svaz_trigger();


--
-- Name: change_tab_kzn; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_tab_kzn AFTER INSERT OR DELETE OR UPDATE ON tab_kzn FOR EACH ROW EXECUTE PROCEDURE tab_kzn_trigger();


--
-- Name: change_tek_soob_rk; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_tek_soob_rk AFTER INSERT OR DELETE OR UPDATE ON tek_soob_rk FOR EACH ROW EXECUTE PROCEDURE tek_soob_rk_trigger();


--
-- Name: change_ups; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_ups AFTER INSERT OR DELETE OR UPDATE ON ups FOR EACH ROW EXECUTE PROCEDURE ups_trigger();


--
-- Name: change_uso; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_uso AFTER INSERT OR DELETE OR UPDATE ON uso FOR EACH ROW EXECUTE PROCEDURE uso_trigger();


--
-- Name: change_vkk; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_vkk AFTER INSERT OR DELETE OR UPDATE ON vkk FOR EACH ROW EXECUTE PROCEDURE vkk_trigger();


--
-- Name: change_zapret; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_zapret AFTER INSERT OR DELETE OR UPDATE ON zapret FOR EACH ROW EXECUTE PROCEDURE zapret_trigger();


--
-- Name: change_zapret_prz; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER change_zapret_prz AFTER INSERT OR DELETE OR UPDATE ON zapret_prz FOR EACH ROW EXECUTE PROCEDURE zapret_prz_trigger();


--
-- Name: id_conf_prz; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER id_conf_prz AFTER UPDATE ON rk FOR EACH ROW EXECUTE PROCEDURE ins_del_conf_prz();


--
-- Name: trig_smena; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER trig_smena AFTER INSERT OR DELETE OR UPDATE ON current_smena FOR EACH ROW EXECUTE PROCEDURE smena_trig();


--
-- Name: trig_telephone; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER trig_telephone AFTER INSERT OR DELETE OR UPDATE ON current_smena FOR EACH ROW EXECUTE PROCEDURE tel_trigger();


--
-- Name: upd_dkl_sa_rpu; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER upd_dkl_sa_rpu AFTER UPDATE ON kzn_dkl FOR EACH ROW EXECUTE PROCEDURE upd_kzn_dkl();


--
-- Name: upd_rk; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER upd_rk AFTER UPDATE ON rk FOR EACH ROW EXECUTE PROCEDURE form_name_rk();


--
-- Name: upd_sa_rpu; Type: TRIGGER; Schema: public; Owner: root
--

CREATE TRIGGER upd_sa_rpu BEFORE UPDATE ON sa_rpu FOR EACH ROW EXECUTE PROCEDURE upd_sa_rpu_blk_i();


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

